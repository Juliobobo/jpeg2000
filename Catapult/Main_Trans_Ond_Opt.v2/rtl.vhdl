-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.200 Production Release
--  HLS Date:       Mon Jun  2 22:10:04 PDT 2014
-- 
--  Generated by:   xph3sle512@cimeld16
--  Generated date: Tue Dec 13 10:28:31 2016
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Main_Trans_Ond_Opt_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps.ALL;
USE work.Main_Trans_Ond_Opt_mux_pkg.ALL;


ENTITY Main_Trans_Ond_Opt_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    core_wen : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (42 DOWNTO 0);
    st_copy_y_2_tr0 : IN STD_LOGIC;
    st_copy_x_tr0 : IN STD_LOGIC;
    st_main_2_tr0 : IN STD_LOGIC;
    st_levels_tr0 : IN STD_LOGIC;
    st_passe_x_tr0 : IN STD_LOGIC;
    st_passe_y_8_tr0 : IN STD_LOGIC;
    st_passe_x_1_tr0 : IN STD_LOGIC;
    st_levels_1_tr0 : IN STD_LOGIC;
    st_passe_x_1_tr0_1 : IN STD_LOGIC;
    st_passe_y_1_8_tr0 : IN STD_LOGIC;
    st_passe_x_1_1_tr0 : IN STD_LOGIC;
    st_levels_2_tr0 : IN STD_LOGIC;
    st_copy_x_1_tr0 : IN STD_LOGIC;
    st_copy_y_1_2_tr0 : IN STD_LOGIC;
    st_copy_x_1_1_tr0 : IN STD_LOGIC;
    st_copy_y_2_2_tr0 : IN STD_LOGIC;
    st_copy_x_2_tr0 : IN STD_LOGIC
  );
END Main_Trans_Ond_Opt_core_fsm;

ARCHITECTURE v2 OF Main_Trans_Ond_Opt_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for Main_Trans_Ond_Opt_core_fsm_1
  TYPE Main_Trans_Ond_Opt_core_fsm_1_ST IS (st_main, st_main_1, st_copy_y, st_copy_y_1,
      st_copy_y_2, st_copy_x, st_main_2, st_levels, st_passe_x, st_passe_y, st_passe_y_1,
      st_passe_y_2, st_passe_y_3, st_passe_y_4, st_passe_y_5, st_passe_y_6, st_passe_y_7,
      st_passe_y_8, st_passe_x_1, st_levels_1, st_passe_x_1_1, st_passe_y_1_1, st_passe_y_1_1_1,
      st_passe_y_1_2, st_passe_y_1_3, st_passe_y_1_4, st_passe_y_1_5, st_passe_y_1_6,
      st_passe_y_1_7, st_passe_y_1_8, st_passe_x_1_1_1, st_levels_2, st_copy_x_1,
      st_copy_y_1_1, st_copy_y_1_1_1, st_copy_y_1_2, st_copy_x_1_1, st_levels_3,
      st_copy_y_2_1, st_copy_y_2_1_1, st_copy_y_2_2, st_copy_x_2, st_main_3);

  SIGNAL state_var : Main_Trans_Ond_Opt_core_fsm_1_ST;
  SIGNAL state_var_NS : Main_Trans_Ond_Opt_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  Main_Trans_Ond_Opt_core_fsm_1 : PROCESS (st_copy_y_2_tr0, st_copy_x_tr0, st_main_2_tr0,
      st_levels_tr0, st_passe_x_tr0, st_passe_y_8_tr0, st_passe_x_1_tr0, st_levels_1_tr0,
      st_passe_x_1_tr0_1, st_passe_y_1_8_tr0, st_passe_x_1_1_tr0, st_levels_2_tr0,
      st_copy_x_1_tr0, st_copy_y_1_2_tr0, st_copy_x_1_1_tr0, st_copy_y_2_2_tr0, st_copy_x_2_tr0,
      state_var)
  BEGIN
    CASE state_var IS
      WHEN st_main =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000001");
        state_var_NS <= st_main_1;
      WHEN st_main_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000010");
        state_var_NS <= st_copy_y;
      WHEN st_copy_y =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000100");
        state_var_NS <= st_copy_y_1;
      WHEN st_copy_y_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000001000");
        state_var_NS <= st_copy_y_2;
      WHEN st_copy_y_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000010000");
        IF ( st_copy_y_2_tr0 = '1' ) THEN
          state_var_NS <= st_copy_x;
        ELSE
          state_var_NS <= st_copy_y;
        END IF;
      WHEN st_copy_x =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000000100000");
        IF ( st_copy_x_tr0 = '1' ) THEN
          state_var_NS <= st_main_2;
        ELSE
          state_var_NS <= st_copy_y;
        END IF;
      WHEN st_main_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000001000000");
        IF ( st_main_2_tr0 = '1' ) THEN
          state_var_NS <= st_copy_y_2_1;
        ELSE
          state_var_NS <= st_levels;
        END IF;
      WHEN st_levels =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000010000000");
        IF ( st_levels_tr0 = '1' ) THEN
          state_var_NS <= st_levels_1;
        ELSE
          state_var_NS <= st_passe_x;
        END IF;
      WHEN st_passe_x =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000000100000000");
        IF ( st_passe_x_tr0 = '1' ) THEN
          state_var_NS <= st_passe_x_1;
        ELSE
          state_var_NS <= st_passe_y;
        END IF;
      WHEN st_passe_y =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000001000000000");
        state_var_NS <= st_passe_y_1;
      WHEN st_passe_y_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000010000000000");
        state_var_NS <= st_passe_y_2;
      WHEN st_passe_y_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000000100000000000");
        state_var_NS <= st_passe_y_3;
      WHEN st_passe_y_3 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000001000000000000");
        state_var_NS <= st_passe_y_4;
      WHEN st_passe_y_4 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000010000000000000");
        state_var_NS <= st_passe_y_5;
      WHEN st_passe_y_5 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000000100000000000000");
        state_var_NS <= st_passe_y_6;
      WHEN st_passe_y_6 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000001000000000000000");
        state_var_NS <= st_passe_y_7;
      WHEN st_passe_y_7 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000010000000000000000");
        state_var_NS <= st_passe_y_8;
      WHEN st_passe_y_8 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000000100000000000000000");
        IF ( st_passe_y_8_tr0 = '1' ) THEN
          state_var_NS <= st_passe_x_1;
        ELSE
          state_var_NS <= st_passe_y;
        END IF;
      WHEN st_passe_x_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000001000000000000000000");
        IF ( st_passe_x_1_tr0 = '1' ) THEN
          state_var_NS <= st_levels_1;
        ELSE
          state_var_NS <= st_passe_x;
        END IF;
      WHEN st_levels_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000010000000000000000000");
        IF ( st_levels_1_tr0 = '1' ) THEN
          state_var_NS <= st_levels_2;
        ELSE
          state_var_NS <= st_passe_x_1_1;
        END IF;
      WHEN st_passe_x_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000000100000000000000000000");
        IF ( st_passe_x_1_tr0_1 = '1' ) THEN
          state_var_NS <= st_passe_x_1_1_1;
        ELSE
          state_var_NS <= st_passe_y_1_1;
        END IF;
      WHEN st_passe_y_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000001000000000000000000000");
        state_var_NS <= st_passe_y_1_1_1;
      WHEN st_passe_y_1_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000010000000000000000000000");
        state_var_NS <= st_passe_y_1_2;
      WHEN st_passe_y_1_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000000100000000000000000000000");
        state_var_NS <= st_passe_y_1_3;
      WHEN st_passe_y_1_3 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000001000000000000000000000000");
        state_var_NS <= st_passe_y_1_4;
      WHEN st_passe_y_1_4 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000010000000000000000000000000");
        state_var_NS <= st_passe_y_1_5;
      WHEN st_passe_y_1_5 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000000100000000000000000000000000");
        state_var_NS <= st_passe_y_1_6;
      WHEN st_passe_y_1_6 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000001000000000000000000000000000");
        state_var_NS <= st_passe_y_1_7;
      WHEN st_passe_y_1_7 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000010000000000000000000000000000");
        state_var_NS <= st_passe_y_1_8;
      WHEN st_passe_y_1_8 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000000100000000000000000000000000000");
        IF ( st_passe_y_1_8_tr0 = '1' ) THEN
          state_var_NS <= st_passe_x_1_1_1;
        ELSE
          state_var_NS <= st_passe_y_1_1;
        END IF;
      WHEN st_passe_x_1_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000001000000000000000000000000000000");
        IF ( st_passe_x_1_1_tr0 = '1' ) THEN
          state_var_NS <= st_levels_2;
        ELSE
          state_var_NS <= st_passe_x_1_1;
        END IF;
      WHEN st_levels_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000010000000000000000000000000000000");
        IF ( st_levels_2_tr0 = '1' ) THEN
          state_var_NS <= st_levels_3;
        ELSE
          state_var_NS <= st_copy_x_1;
        END IF;
      WHEN st_copy_x_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000000100000000000000000000000000000000");
        IF ( st_copy_x_1_tr0 = '1' ) THEN
          state_var_NS <= st_copy_x_1_1;
        ELSE
          state_var_NS <= st_copy_y_1_1;
        END IF;
      WHEN st_copy_y_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000001000000000000000000000000000000000");
        state_var_NS <= st_copy_y_1_1_1;
      WHEN st_copy_y_1_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000010000000000000000000000000000000000");
        state_var_NS <= st_copy_y_1_2;
      WHEN st_copy_y_1_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000000100000000000000000000000000000000000");
        IF ( st_copy_y_1_2_tr0 = '1' ) THEN
          state_var_NS <= st_copy_x_1_1;
        ELSE
          state_var_NS <= st_copy_y_1_1;
        END IF;
      WHEN st_copy_x_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000001000000000000000000000000000000000000");
        IF ( st_copy_x_1_1_tr0 = '1' ) THEN
          state_var_NS <= st_levels_3;
        ELSE
          state_var_NS <= st_copy_x_1;
        END IF;
      WHEN st_levels_3 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000010000000000000000000000000000000000000");
        IF ( st_main_2_tr0 = '1' ) THEN
          state_var_NS <= st_copy_y_2_1;
        ELSE
          state_var_NS <= st_levels;
        END IF;
      WHEN st_copy_y_2_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0000100000000000000000000000000000000000000");
        state_var_NS <= st_copy_y_2_1_1;
      WHEN st_copy_y_2_1_1 =>
        fsm_output <= STD_LOGIC_VECTOR'("0001000000000000000000000000000000000000000");
        state_var_NS <= st_copy_y_2_2;
      WHEN st_copy_y_2_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0010000000000000000000000000000000000000000");
        IF ( st_copy_y_2_2_tr0 = '1' ) THEN
          state_var_NS <= st_copy_x_2;
        ELSE
          state_var_NS <= st_copy_y_2_1;
        END IF;
      WHEN st_copy_x_2 =>
        fsm_output <= STD_LOGIC_VECTOR'("0100000000000000000000000000000000000000000");
        IF ( st_copy_x_2_tr0 = '1' ) THEN
          state_var_NS <= st_main_3;
        ELSE
          state_var_NS <= st_copy_y_2_1;
        END IF;
      WHEN st_main_3 =>
        fsm_output <= STD_LOGIC_VECTOR'("1000000000000000000000000000000000000000000");
        state_var_NS <= st_main;
      WHEN OTHERS =>
        fsm_output <= "0000000000000000000000000000000000000000000";
        state_var_NS <= st_main;
    END CASE;
  END PROCESS Main_Trans_Ond_Opt_core_fsm_1;

  Main_Trans_Ond_Opt_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= st_main;
      ELSE
        IF ( core_wen = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS Main_Trans_Ond_Opt_core_fsm_1_REG;

END v2;

-- ------------------------------------------------------------------
--  Design Unit:    Main_Trans_Ond_Opt_core_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps.ALL;
USE work.Main_Trans_Ond_Opt_mux_pkg.ALL;


ENTITY Main_Trans_Ond_Opt_core_wait_ctrl IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    core_wen : OUT STD_LOGIC;
    Src_rsc_singleport_re_core_sct : OUT STD_LOGIC;
    Src_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    Dst_rsc_singleport_re_core_sct : OUT STD_LOGIC;
    Dst_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    Vga_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    mgc_start_sync_mgc_bsync_vld_vd : IN STD_LOGIC;
    mgc_done_sync_mgc_bsync_rdy_rd_core_sct : OUT STD_LOGIC;
    Vga_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    Dst_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    Src_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    nbLevels_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    Src_rsc_singleport_oswt : IN STD_LOGIC;
    Src_rsc_singleport_bcwt : OUT STD_LOGIC;
    Src_rsc_singleport_re_core_psct : IN STD_LOGIC;
    Src_rsc_singleport_we_core_psct : IN STD_LOGIC;
    Dst_rsc_singleport_oswt : IN STD_LOGIC;
    Dst_rsc_singleport_bcwt : OUT STD_LOGIC;
    Dst_rsc_singleport_re_core_psct : IN STD_LOGIC;
    Dst_rsc_singleport_we_core_psct : IN STD_LOGIC;
    Vga_rsc_singleport_oswt : IN STD_LOGIC;
    mgc_start_sync_mgc_bsync_vld_oswt : IN STD_LOGIC;
    mgc_done_sync_mgc_bsync_rdy_rd_core_psct : IN STD_LOGIC;
    Src_rsc_singleport_oswt_pff : IN STD_LOGIC;
    Dst_rsc_singleport_oswt_pff : IN STD_LOGIC;
    Vga_rsc_singleport_oswt_pff : IN STD_LOGIC
  );
END Main_Trans_Ond_Opt_core_wait_ctrl;

ARCHITECTURE v2 OF Main_Trans_Ond_Opt_core_wait_ctrl IS
  -- Default Constants

  -- Output Reader Declarations
  SIGNAL core_wen_drv : STD_LOGIC;
  SIGNAL Src_rsc_singleport_bcwt_drv : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_bcwt_drv : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL Src_rsc_singleport_tiswt0 : STD_LOGIC;
  SIGNAL Src_rsc_singleport_biwt : STD_LOGIC;
  SIGNAL Src_rsc_singleport_icwt : STD_LOGIC;
  SIGNAL core_wten : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_tiswt0 : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_biwt : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_icwt : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_tiswt0 : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_biwt : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_icwt : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_bcwt : STD_LOGIC;
  SIGNAL mgc_start_sync_mgc_bsync_vld_pdswt0 : STD_LOGIC;
  SIGNAL mgc_start_sync_mgc_bsync_vld_biwt : STD_LOGIC;
  SIGNAL mgc_start_sync_mgc_bsync_vld_icwt : STD_LOGIC;
  SIGNAL mgc_start_sync_mgc_bsync_vld_bcwt : STD_LOGIC;
  SIGNAL mgc_done_sync_mgc_bsync_rdy_ogwt : STD_LOGIC;
  SIGNAL mgc_done_sync_mgc_bsync_rdy_pdswt0 : STD_LOGIC;
  SIGNAL mgc_done_sync_mgc_bsync_rdy_icwt : STD_LOGIC;
  SIGNAL mgc_done_sync_mgc_bsync_rdy_bcwt : STD_LOGIC;
  SIGNAL Vga_triosy_mgc_io_sync_ogwt : STD_LOGIC;
  SIGNAL Vga_triosy_mgc_io_sync_icwt : STD_LOGIC;
  SIGNAL Vga_triosy_mgc_io_sync_bcwt : STD_LOGIC;
  SIGNAL Dst_triosy_mgc_io_sync_ogwt : STD_LOGIC;
  SIGNAL Dst_triosy_mgc_io_sync_icwt : STD_LOGIC;
  SIGNAL Dst_triosy_mgc_io_sync_bcwt : STD_LOGIC;
  SIGNAL Src_triosy_mgc_io_sync_ogwt : STD_LOGIC;
  SIGNAL Src_triosy_mgc_io_sync_icwt : STD_LOGIC;
  SIGNAL Src_triosy_mgc_io_sync_bcwt : STD_LOGIC;
  SIGNAL nbLevels_triosy_mgc_io_sync_ogwt : STD_LOGIC;
  SIGNAL nbLevels_triosy_mgc_io_sync_icwt : STD_LOGIC;
  SIGNAL nbLevels_triosy_mgc_io_sync_bcwt : STD_LOGIC;
  SIGNAL and_24_cse : STD_LOGIC;
  SIGNAL Src_rsc_singleport_tiswt0_pff : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_tiswt0_pff : STD_LOGIC;

BEGIN
  -- Default Constant Signal Assignments

  -- Output Reader Assignments
  core_wen <= core_wen_drv;
  Src_rsc_singleport_bcwt <= Src_rsc_singleport_bcwt_drv;
  Dst_rsc_singleport_bcwt <= Dst_rsc_singleport_bcwt_drv;

  Src_rsc_singleport_tiswt0 <= (NOT core_wten) AND Src_rsc_singleport_oswt;
  Src_rsc_singleport_biwt <= Src_rsc_singleport_tiswt0 OR Src_rsc_singleport_icwt;
  Dst_rsc_singleport_tiswt0 <= (NOT core_wten) AND Dst_rsc_singleport_oswt;
  Dst_rsc_singleport_biwt <= Dst_rsc_singleport_tiswt0 OR Dst_rsc_singleport_icwt;
  Vga_rsc_singleport_tiswt0 <= (NOT core_wten) AND Vga_rsc_singleport_oswt;
  Vga_rsc_singleport_biwt <= Vga_rsc_singleport_tiswt0 OR Vga_rsc_singleport_icwt;
  mgc_start_sync_mgc_bsync_vld_pdswt0 <= (NOT core_wten) AND mgc_start_sync_mgc_bsync_vld_oswt;
  mgc_start_sync_mgc_bsync_vld_biwt <= (mgc_start_sync_mgc_bsync_vld_pdswt0 OR mgc_start_sync_mgc_bsync_vld_icwt)
      AND mgc_start_sync_mgc_bsync_vld_vd;
  mgc_done_sync_mgc_bsync_rdy_pdswt0 <= (NOT core_wten) AND mgc_done_sync_mgc_bsync_rdy_rd_core_psct;
  mgc_done_sync_mgc_bsync_rdy_ogwt <= mgc_done_sync_mgc_bsync_rdy_pdswt0 OR mgc_done_sync_mgc_bsync_rdy_icwt;
  and_24_cse <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct AND core_wen_drv;
  mgc_done_sync_mgc_bsync_rdy_rd_core_sct <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      AND mgc_done_sync_mgc_bsync_rdy_ogwt;
  Vga_triosy_mgc_io_sync_ogwt <= mgc_done_sync_mgc_bsync_rdy_pdswt0 OR Vga_triosy_mgc_io_sync_icwt;
  Vga_triosy_mgc_io_sync_ld_core_sct <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      AND Vga_triosy_mgc_io_sync_ogwt;
  Dst_triosy_mgc_io_sync_ogwt <= mgc_done_sync_mgc_bsync_rdy_pdswt0 OR Dst_triosy_mgc_io_sync_icwt;
  Dst_triosy_mgc_io_sync_ld_core_sct <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      AND Dst_triosy_mgc_io_sync_ogwt;
  Src_triosy_mgc_io_sync_ogwt <= mgc_done_sync_mgc_bsync_rdy_pdswt0 OR Src_triosy_mgc_io_sync_icwt;
  Src_triosy_mgc_io_sync_ld_core_sct <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      AND Src_triosy_mgc_io_sync_ogwt;
  nbLevels_triosy_mgc_io_sync_ogwt <= mgc_done_sync_mgc_bsync_rdy_pdswt0 OR nbLevels_triosy_mgc_io_sync_icwt;
  nbLevels_triosy_mgc_io_sync_ld_core_sct <= mgc_done_sync_mgc_bsync_rdy_rd_core_psct
      AND nbLevels_triosy_mgc_io_sync_ogwt;
  core_wen_drv <= ((NOT Src_rsc_singleport_oswt) OR Src_rsc_singleport_biwt OR Src_rsc_singleport_bcwt_drv)
      AND ((NOT Dst_rsc_singleport_oswt) OR Dst_rsc_singleport_biwt OR Dst_rsc_singleport_bcwt_drv)
      AND ((NOT Vga_rsc_singleport_oswt) OR Vga_rsc_singleport_biwt OR Vga_rsc_singleport_bcwt)
      AND ((NOT mgc_start_sync_mgc_bsync_vld_oswt) OR mgc_start_sync_mgc_bsync_vld_biwt
      OR mgc_start_sync_mgc_bsync_vld_bcwt) AND ((NOT mgc_done_sync_mgc_bsync_rdy_rd_core_psct)
      OR mgc_done_sync_mgc_bsync_rdy_ogwt OR mgc_done_sync_mgc_bsync_rdy_bcwt) AND
      ((NOT mgc_done_sync_mgc_bsync_rdy_rd_core_psct) OR Vga_triosy_mgc_io_sync_ogwt
      OR Vga_triosy_mgc_io_sync_bcwt) AND ((NOT mgc_done_sync_mgc_bsync_rdy_rd_core_psct)
      OR Dst_triosy_mgc_io_sync_ogwt OR Dst_triosy_mgc_io_sync_bcwt) AND ((NOT mgc_done_sync_mgc_bsync_rdy_rd_core_psct)
      OR Src_triosy_mgc_io_sync_ogwt OR Src_triosy_mgc_io_sync_bcwt) AND ((NOT mgc_done_sync_mgc_bsync_rdy_rd_core_psct)
      OR nbLevels_triosy_mgc_io_sync_ogwt OR nbLevels_triosy_mgc_io_sync_bcwt);
  Src_rsc_singleport_re_core_sct <= Src_rsc_singleport_re_core_psct AND Src_rsc_singleport_tiswt0_pff;
  Src_rsc_singleport_tiswt0_pff <= core_wen_drv AND Src_rsc_singleport_oswt_pff;
  Src_rsc_singleport_we_core_sct <= Src_rsc_singleport_we_core_psct AND Src_rsc_singleport_tiswt0_pff;
  Dst_rsc_singleport_re_core_sct <= Dst_rsc_singleport_re_core_psct AND Dst_rsc_singleport_tiswt0_pff;
  Dst_rsc_singleport_tiswt0_pff <= core_wen_drv AND Dst_rsc_singleport_oswt_pff;
  Dst_rsc_singleport_we_core_sct <= Dst_rsc_singleport_we_core_psct AND Dst_rsc_singleport_tiswt0_pff;
  Vga_rsc_singleport_we_core_sct <= Vga_rsc_singleport_oswt_pff AND core_wen_drv;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        Src_rsc_singleport_icwt <= '0';
        Src_rsc_singleport_bcwt_drv <= '0';
        Dst_rsc_singleport_icwt <= '0';
        Dst_rsc_singleport_bcwt_drv <= '0';
        Vga_rsc_singleport_icwt <= '0';
        Vga_rsc_singleport_bcwt <= '0';
        mgc_start_sync_mgc_bsync_vld_icwt <= '0';
        mgc_start_sync_mgc_bsync_vld_bcwt <= '0';
        mgc_done_sync_mgc_bsync_rdy_icwt <= '0';
        mgc_done_sync_mgc_bsync_rdy_bcwt <= '0';
        Vga_triosy_mgc_io_sync_icwt <= '0';
        Vga_triosy_mgc_io_sync_bcwt <= '0';
        Dst_triosy_mgc_io_sync_icwt <= '0';
        Dst_triosy_mgc_io_sync_bcwt <= '0';
        Src_triosy_mgc_io_sync_icwt <= '0';
        Src_triosy_mgc_io_sync_bcwt <= '0';
        nbLevels_triosy_mgc_io_sync_icwt <= '0';
        nbLevels_triosy_mgc_io_sync_bcwt <= '0';
        core_wten <= '0';
      ELSE
        Src_rsc_singleport_icwt <= Src_rsc_singleport_icwt XOR Src_rsc_singleport_tiswt0
            XOR Src_rsc_singleport_biwt;
        Src_rsc_singleport_bcwt_drv <= Src_rsc_singleport_bcwt_drv XOR Src_rsc_singleport_biwt
            XOR (Src_rsc_singleport_oswt AND core_wen_drv);
        Dst_rsc_singleport_icwt <= Dst_rsc_singleport_icwt XOR Dst_rsc_singleport_tiswt0
            XOR Dst_rsc_singleport_biwt;
        Dst_rsc_singleport_bcwt_drv <= Dst_rsc_singleport_bcwt_drv XOR Dst_rsc_singleport_biwt
            XOR (Dst_rsc_singleport_oswt AND core_wen_drv);
        Vga_rsc_singleport_icwt <= Vga_rsc_singleport_icwt XOR Vga_rsc_singleport_tiswt0
            XOR Vga_rsc_singleport_biwt;
        Vga_rsc_singleport_bcwt <= Vga_rsc_singleport_bcwt XOR Vga_rsc_singleport_biwt
            XOR (Vga_rsc_singleport_oswt AND core_wen_drv);
        mgc_start_sync_mgc_bsync_vld_icwt <= mgc_start_sync_mgc_bsync_vld_icwt XOR
            mgc_start_sync_mgc_bsync_vld_pdswt0 XOR mgc_start_sync_mgc_bsync_vld_biwt;
        mgc_start_sync_mgc_bsync_vld_bcwt <= mgc_start_sync_mgc_bsync_vld_bcwt XOR
            mgc_start_sync_mgc_bsync_vld_biwt XOR (mgc_start_sync_mgc_bsync_vld_oswt
            AND core_wen_drv);
        mgc_done_sync_mgc_bsync_rdy_icwt <= mgc_done_sync_mgc_bsync_rdy_icwt XOR
            mgc_done_sync_mgc_bsync_rdy_pdswt0 XOR mgc_done_sync_mgc_bsync_rdy_ogwt;
        mgc_done_sync_mgc_bsync_rdy_bcwt <= mgc_done_sync_mgc_bsync_rdy_bcwt XOR
            mgc_done_sync_mgc_bsync_rdy_ogwt XOR and_24_cse;
        Vga_triosy_mgc_io_sync_icwt <= Vga_triosy_mgc_io_sync_icwt XOR mgc_done_sync_mgc_bsync_rdy_pdswt0
            XOR Vga_triosy_mgc_io_sync_ogwt;
        Vga_triosy_mgc_io_sync_bcwt <= Vga_triosy_mgc_io_sync_bcwt XOR Vga_triosy_mgc_io_sync_ogwt
            XOR and_24_cse;
        Dst_triosy_mgc_io_sync_icwt <= Dst_triosy_mgc_io_sync_icwt XOR mgc_done_sync_mgc_bsync_rdy_pdswt0
            XOR Dst_triosy_mgc_io_sync_ogwt;
        Dst_triosy_mgc_io_sync_bcwt <= Dst_triosy_mgc_io_sync_bcwt XOR Dst_triosy_mgc_io_sync_ogwt
            XOR and_24_cse;
        Src_triosy_mgc_io_sync_icwt <= Src_triosy_mgc_io_sync_icwt XOR mgc_done_sync_mgc_bsync_rdy_pdswt0
            XOR Src_triosy_mgc_io_sync_ogwt;
        Src_triosy_mgc_io_sync_bcwt <= Src_triosy_mgc_io_sync_bcwt XOR Src_triosy_mgc_io_sync_ogwt
            XOR and_24_cse;
        nbLevels_triosy_mgc_io_sync_icwt <= nbLevels_triosy_mgc_io_sync_icwt XOR
            mgc_done_sync_mgc_bsync_rdy_pdswt0 XOR nbLevels_triosy_mgc_io_sync_ogwt;
        nbLevels_triosy_mgc_io_sync_bcwt <= nbLevels_triosy_mgc_io_sync_bcwt XOR
            nbLevels_triosy_mgc_io_sync_ogwt XOR and_24_cse;
        core_wten <= NOT core_wen_drv;
      END IF;
    END IF;
  END PROCESS;
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    Main_Trans_Ond_Opt_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps.ALL;
USE work.Main_Trans_Ond_Opt_mux_pkg.ALL;


ENTITY Main_Trans_Ond_Opt_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    Src_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    Dst_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    Src_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Src_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Src_rsc_singleport_re_core_sct : OUT STD_LOGIC;
    Src_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    Dst_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Dst_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Dst_rsc_singleport_re_core_sct : OUT STD_LOGIC;
    Dst_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    Vga_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Vga_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Vga_rsc_singleport_we_core_sct : OUT STD_LOGIC;
    nbLevels_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    mgc_start_sync_mgc_bsync_vld_vd : IN STD_LOGIC;
    mgc_done_sync_mgc_bsync_rdy_rd_core_sct : OUT STD_LOGIC;
    Vga_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    Dst_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    Src_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
    nbLevels_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC
  );
END Main_Trans_Ond_Opt_core;

ARCHITECTURE v2 OF Main_Trans_Ond_Opt_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL Src_rsc_singleport_bcwt : STD_LOGIC;
  SIGNAL Src_rsc_singleport_data_out_mxwt : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Src_rsc_singleport_data_out_bfwt : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Dst_rsc_singleport_bcwt : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_data_out_mxwt : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Dst_rsc_singleport_data_out_bfwt : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL core_wen : STD_LOGIC;
  SIGNAL fsm_output : STD_LOGIC_VECTOR (42 DOWNTO 0);
  SIGNAL levels_nand_tmp : STD_LOGIC;
  SIGNAL or_dcpl_6 : STD_LOGIC;
  SIGNAL or_dcpl_9 : STD_LOGIC;
  SIGNAL or_dcpl_12 : STD_LOGIC;
  SIGNAL or_dcpl_19 : STD_LOGIC;
  SIGNAL or_dcpl_21 : STD_LOGIC;
  SIGNAL or_dcpl_22 : STD_LOGIC;
  SIGNAL or_dcpl_26 : STD_LOGIC;
  SIGNAL or_dcpl_29 : STD_LOGIC;
  SIGNAL or_dcpl_73 : STD_LOGIC;
  SIGNAL or_dcpl_89 : STD_LOGIC;
  SIGNAL or_dcpl_569 : STD_LOGIC;
  SIGNAL or_dcpl_572 : STD_LOGIC;
  SIGNAL or_dcpl_579 : STD_LOGIC;
  SIGNAL or_dcpl_580 : STD_LOGIC;
  SIGNAL or_dcpl_585 : STD_LOGIC;
  SIGNAL or_dcpl_586 : STD_LOGIC;
  SIGNAL or_dcpl_1080 : STD_LOGIC;
  SIGNAL or_dcpl_1081 : STD_LOGIC;
  SIGNAL or_dcpl_1083 : STD_LOGIC;
  SIGNAL or_dcpl_1089 : STD_LOGIC;
  SIGNAL or_dcpl_1109 : STD_LOGIC;
  SIGNAL or_dcpl_1113 : STD_LOGIC;
  SIGNAL or_dcpl_1133 : STD_LOGIC;
  SIGNAL and_dcpl_16 : STD_LOGIC;
  SIGNAL and_dcpl_23 : STD_LOGIC;
  SIGNAL and_dcpl_33 : STD_LOGIC;
  SIGNAL nbLevels_1_sva : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL hi_7_sg3_sva : STD_LOGIC;
  SIGNAL hi_7_sg4_sva : STD_LOGIC;
  SIGNAL hi_7_sg2_sva : STD_LOGIC;
  SIGNAL hi_7_sg5_sva : STD_LOGIC;
  SIGNAL hi_7_sg1_sva : STD_LOGIC;
  SIGNAL hi_7_sg6_sva : STD_LOGIC;
  SIGNAL hi_7_sg7_sva : STD_LOGIC;
  SIGNAL wi_7_sg4_sva : STD_LOGIC;
  SIGNAL wi_7_sg3_sva : STD_LOGIC;
  SIGNAL wi_7_sg5_sva : STD_LOGIC;
  SIGNAL wi_7_sg2_sva : STD_LOGIC;
  SIGNAL wi_7_sg6_sva : STD_LOGIC;
  SIGNAL wi_7_sg1_sva : STD_LOGIC;
  SIGNAL wi_7_sg7_sva : STD_LOGIC;
  SIGNAL wi_7_sg8_sva : STD_LOGIC;
  SIGNAL image_copy_y_1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL image_copy_x_1_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL image_copy_x_1_sva_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL Trans_Ond_y_1_sva : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL Trans_Ond_x_1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL exit_passe_y_sva : STD_LOGIC;
  SIGNAL moy_slc_Src_cse_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL moy_acc_cse_sg1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL sub_sub_return_3_lpi_3_dfm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL levels_nand_svs : STD_LOGIC;
  SIGNAL Trans_Ond_1_y_1_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Trans_Ond_1_x_1_sva : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL exit_passe_y_1_sva : STD_LOGIC;
  SIGNAL passe_y_1_acc_1_cse_1_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL moy_6_acc_cse_sg1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL sub_sub_return_9_lpi_3_dfm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL image_copy_1_y_1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL exit_copy_y_1_sva : STD_LOGIC;
  SIGNAL image_copy_2_y_1_sva : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL image_copy_2_x_1_sva : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL image_copy_2_x_1_sva_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL copy_y_slc_itm : STD_LOGIC;
  SIGNAL passe_y_slc_Trans_Ond_x_1_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Trans_Ond_x_slc_Trans_Ond_x_6_itm : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL passe_y_slc_Trans_Ond_x_1_1_itm : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL sub_mux_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_7_itm : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL moy_5_slc_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Trans_Ond_x_slc_Trans_Ond_x_3_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL sub_5_mux_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_13_itm : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL passe_y_1_slc_Trans_Ond_1_x_1_1_itm : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL sub_6_mux_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_1_acc_7_itm : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL moy_11_slc_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL sub_11_mux_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_1_acc_13_itm : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL image_copy_1_x_slc_image_copy_1_x_1_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL levels_asn_3_itm : STD_LOGIC;
  SIGNAL levels_asn_4_itm : STD_LOGIC;
  SIGNAL levels_asn_14_itm : STD_LOGIC;
  SIGNAL levels_asn_15_itm : STD_LOGIC;
  SIGNAL copy_y_2_slc_itm : STD_LOGIC;
  SIGNAL i_1_sg1_sva_2 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL image_copy_1_x_1_sva_2 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_psp : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_51_psp : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL passe_y_acc_49_psp : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL passe_y_1_acc_49_psp : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_1_acc_psp : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL copy_y_1_acc_psp : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_x_acc_3_cse_sg1 : STD_LOGIC;
  SIGNAL or_1129_cse : STD_LOGIC;
  SIGNAL exit_passe_x_1_sva_mx0 : STD_LOGIC;
  SIGNAL or_621_cse : STD_LOGIC;
  SIGNAL reg_nbLevels_triosy_mgc_io_sync_iswt0_cse : STD_LOGIC;
  SIGNAL reg_start_sync_mgc_bsync_vld_iswt0_cse : STD_LOGIC;
  SIGNAL reg_Vga_rsc_singleport_we_core_psct_cse : STD_LOGIC;
  SIGNAL reg_Dst_rsc_singleport_iswt0_cse : STD_LOGIC;
  SIGNAL reg_Src_rsc_singleport_iswt0_cse : STD_LOGIC;
  SIGNAL reg_Vga_rsc_singleport_data_in_core_cse : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_passe_y_acc_46_sdt_tmp_7 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_passe_y_acc_43_sdt_tmp_6 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_passe_y_acc_44_sdt_tmp_7 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_slc_slc_tmp_5 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_passe_y_1_acc_44_sdt_tmp_6 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL or_1235_cse : STD_LOGIC;
  SIGNAL Src_rsc_singleport_re_core_sct_reg : STD_LOGIC;
  SIGNAL or_1143_rmff : STD_LOGIC;
  SIGNAL Src_rsc_singleport_we_core_sct_reg : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_re_core_sct_reg : STD_LOGIC;
  SIGNAL or_1126_rmff : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_we_core_sct_reg : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_we_core_sct_reg : STD_LOGIC;
  SIGNAL copy_y_1_acc_psp_1 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_43_sdt_mx0w0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_1_acc_43_itm : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL copy_x_1_acc_3_itm : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_3 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_5 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_6 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_7 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_8 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_9 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_10 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_11 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_12 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL z_out_13 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL z_out_14 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL z_out_15 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL z_out_16 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL z_out_17 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_18 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_19 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_20 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL z_out_21 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL z_out_22 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_23 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL Trans_Ond_x_1_sva_mx0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL passe_y_acc_46_sdt_mx0w0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL image_copy_1_y_1_sva_1 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Trans_Ond_1_y_1_sva_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL Trans_Ond_1_x_1_sva_mx0 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL image_copy_1_x_1_sva_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL i_1_sg1_sva_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL nor_3_cse : STD_LOGIC;
  SIGNAL nor_7_cse : STD_LOGIC;
  SIGNAL reg_copy_y_acc_8_psp_cse : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mux_43_cse : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_copy_y_acc_7_psp_6_cse : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL passe_y_1_acc_45_itm : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL or_1240_cse : STD_LOGIC;
  SIGNAL mux_136_cse : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_133_cse : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_135_cse : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL mux1h_18_nl : STD_LOGIC;
  SIGNAL mux1h_38_nl : STD_LOGIC;
  SIGNAL mux1h_39_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux1h_40_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux1h_41_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL mux1h_42_nl : STD_LOGIC;
  SIGNAL mux1h_16_nl : STD_LOGIC;
  SIGNAL mux1h_34_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_35_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux1h_36_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL mux1h_37_nl : STD_LOGIC;
  SIGNAL mux_83_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_126_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL mux_84_nl : STD_LOGIC;
  SIGNAL mux_127_nl : STD_LOGIC;
  SIGNAL mux_128_nl : STD_LOGIC;
  SIGNAL mux_129_nl : STD_LOGIC;
  SIGNAL mux_130_nl : STD_LOGIC;
  SIGNAL mux_131_nl : STD_LOGIC;
  SIGNAL mux_132_nl : STD_LOGIC;
  SIGNAL mux_85_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_86_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux_134_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_87_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_88_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_90_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_91_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_92_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_93_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_94_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_97_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_99_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_137_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_102_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_102_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_138_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_103_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux_104_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL mux1h_105_nl : STD_LOGIC;
  SIGNAL mux1h_111_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux_105_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_106_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_107_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux1h_108_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mux1h_109_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux_107_nl : STD_LOGIC;
  SIGNAL mux_140_nl : STD_LOGIC;
  SIGNAL mux_123_nl : STD_LOGIC;
  SIGNAL mux_124_nl : STD_LOGIC;
  SIGNAL mux_125_nl : STD_LOGIC;
  SIGNAL mux_141_nl : STD_LOGIC;
  SIGNAL mux_108_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_109_nl : STD_LOGIC;
  SIGNAL mux_142_nl : STD_LOGIC;
  SIGNAL mux_143_nl : STD_LOGIC;
  SIGNAL mux_144_nl : STD_LOGIC;
  SIGNAL mux_145_nl : STD_LOGIC;
  SIGNAL mux_146_nl : STD_LOGIC;
  SIGNAL mux_147_nl : STD_LOGIC;
  COMPONENT Main_Trans_Ond_Opt_core_wait_ctrl
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      core_wen : OUT STD_LOGIC;
      Src_rsc_singleport_re_core_sct : OUT STD_LOGIC;
      Src_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      Dst_rsc_singleport_re_core_sct : OUT STD_LOGIC;
      Dst_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      Vga_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      mgc_start_sync_mgc_bsync_vld_vd : IN STD_LOGIC;
      mgc_done_sync_mgc_bsync_rdy_rd_core_sct : OUT STD_LOGIC;
      Vga_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      Dst_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      Src_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      nbLevels_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      Src_rsc_singleport_oswt : IN STD_LOGIC;
      Src_rsc_singleport_bcwt : OUT STD_LOGIC;
      Src_rsc_singleport_re_core_psct : IN STD_LOGIC;
      Src_rsc_singleport_we_core_psct : IN STD_LOGIC;
      Dst_rsc_singleport_oswt : IN STD_LOGIC;
      Dst_rsc_singleport_bcwt : OUT STD_LOGIC;
      Dst_rsc_singleport_re_core_psct : IN STD_LOGIC;
      Dst_rsc_singleport_we_core_psct : IN STD_LOGIC;
      Vga_rsc_singleport_oswt : IN STD_LOGIC;
      mgc_start_sync_mgc_bsync_vld_oswt : IN STD_LOGIC;
      mgc_done_sync_mgc_bsync_rdy_rd_core_psct : IN STD_LOGIC;
      Src_rsc_singleport_oswt_pff : IN STD_LOGIC;
      Dst_rsc_singleport_oswt_pff : IN STD_LOGIC;
      Vga_rsc_singleport_oswt_pff : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Main_Trans_Ond_Opt_core_wait_ctrl_inst_Src_rsc_singleport_re_core_psct :
      STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_re_core_psct :
      STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_we_core_psct :
      STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_wait_ctrl_inst_Vga_rsc_singleport_oswt_pff : STD_LOGIC;

  COMPONENT Main_Trans_Ond_Opt_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      core_wen : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (42 DOWNTO 0);
      st_copy_y_2_tr0 : IN STD_LOGIC;
      st_copy_x_tr0 : IN STD_LOGIC;
      st_main_2_tr0 : IN STD_LOGIC;
      st_levels_tr0 : IN STD_LOGIC;
      st_passe_x_tr0 : IN STD_LOGIC;
      st_passe_y_8_tr0 : IN STD_LOGIC;
      st_passe_x_1_tr0 : IN STD_LOGIC;
      st_levels_1_tr0 : IN STD_LOGIC;
      st_passe_x_1_tr0_1 : IN STD_LOGIC;
      st_passe_y_1_8_tr0 : IN STD_LOGIC;
      st_passe_x_1_1_tr0 : IN STD_LOGIC;
      st_levels_2_tr0 : IN STD_LOGIC;
      st_copy_x_1_tr0 : IN STD_LOGIC;
      st_copy_y_1_2_tr0 : IN STD_LOGIC;
      st_copy_x_1_1_tr0 : IN STD_LOGIC;
      st_copy_y_2_2_tr0 : IN STD_LOGIC;
      st_copy_x_2_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (42 DOWNTO
      0);
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_main_2_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_levels_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_levels_1_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0_1 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_1_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_2_tr0 : STD_LOGIC;
  SIGNAL Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_2_tr0 : STD_LOGIC;

BEGIN
  -- Default Constant Signal Assignments

  Main_Trans_Ond_Opt_core_wait_ctrl_inst : Main_Trans_Ond_Opt_core_wait_ctrl
    PORT MAP(
      clk => clk,
      rst => rst,
      core_wen => core_wen,
      Src_rsc_singleport_re_core_sct => Src_rsc_singleport_re_core_sct_reg,
      Src_rsc_singleport_we_core_sct => Src_rsc_singleport_we_core_sct_reg,
      Dst_rsc_singleport_re_core_sct => Dst_rsc_singleport_re_core_sct_reg,
      Dst_rsc_singleport_we_core_sct => Dst_rsc_singleport_we_core_sct_reg,
      Vga_rsc_singleport_we_core_sct => Vga_rsc_singleport_we_core_sct_reg,
      mgc_start_sync_mgc_bsync_vld_vd => mgc_start_sync_mgc_bsync_vld_vd,
      mgc_done_sync_mgc_bsync_rdy_rd_core_sct => mgc_done_sync_mgc_bsync_rdy_rd_core_sct,
      Vga_triosy_mgc_io_sync_ld_core_sct => Vga_triosy_mgc_io_sync_ld_core_sct,
      Dst_triosy_mgc_io_sync_ld_core_sct => Dst_triosy_mgc_io_sync_ld_core_sct,
      Src_triosy_mgc_io_sync_ld_core_sct => Src_triosy_mgc_io_sync_ld_core_sct,
      nbLevels_triosy_mgc_io_sync_ld_core_sct => nbLevels_triosy_mgc_io_sync_ld_core_sct,
      Src_rsc_singleport_oswt => reg_Src_rsc_singleport_iswt0_cse,
      Src_rsc_singleport_bcwt => Src_rsc_singleport_bcwt,
      Src_rsc_singleport_re_core_psct => Main_Trans_Ond_Opt_core_wait_ctrl_inst_Src_rsc_singleport_re_core_psct,
      Src_rsc_singleport_we_core_psct => or_1129_cse,
      Dst_rsc_singleport_oswt => reg_Dst_rsc_singleport_iswt0_cse,
      Dst_rsc_singleport_bcwt => Dst_rsc_singleport_bcwt,
      Dst_rsc_singleport_re_core_psct => Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_re_core_psct,
      Dst_rsc_singleport_we_core_psct => Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_we_core_psct,
      Vga_rsc_singleport_oswt => reg_Vga_rsc_singleport_we_core_psct_cse,
      mgc_start_sync_mgc_bsync_vld_oswt => reg_start_sync_mgc_bsync_vld_iswt0_cse,
      mgc_done_sync_mgc_bsync_rdy_rd_core_psct => reg_nbLevels_triosy_mgc_io_sync_iswt0_cse,
      Src_rsc_singleport_oswt_pff => or_1143_rmff,
      Dst_rsc_singleport_oswt_pff => or_1126_rmff,
      Vga_rsc_singleport_oswt_pff => Main_Trans_Ond_Opt_core_wait_ctrl_inst_Vga_rsc_singleport_oswt_pff
    );
  Main_Trans_Ond_Opt_core_wait_ctrl_inst_Src_rsc_singleport_re_core_psct <= or_dcpl_1133
      OR or_dcpl_572;
  Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_re_core_psct <= or_dcpl_1081
      OR or_dcpl_1113;
  Main_Trans_Ond_Opt_core_wait_ctrl_inst_Dst_rsc_singleport_we_core_psct <= or_dcpl_1089
      OR or_dcpl_1109;
  Main_Trans_Ond_Opt_core_wait_ctrl_inst_Vga_rsc_singleport_oswt_pff <= fsm_output(39);

  Main_Trans_Ond_Opt_core_fsm_inst : Main_Trans_Ond_Opt_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      core_wen => core_wen,
      fsm_output => Main_Trans_Ond_Opt_core_fsm_inst_fsm_output,
      st_copy_y_2_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_tr0,
      st_copy_x_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_tr0,
      st_main_2_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_main_2_tr0,
      st_levels_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_levels_tr0,
      st_passe_x_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_tr0,
      st_passe_y_8_tr0 => exit_passe_y_sva,
      st_passe_x_1_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0,
      st_levels_1_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_levels_1_tr0,
      st_passe_x_1_tr0_1 => Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0_1,
      st_passe_y_1_8_tr0 => exit_passe_y_1_sva,
      st_passe_x_1_1_tr0 => exit_passe_x_1_sva_mx0,
      st_levels_2_tr0 => or_dcpl_73,
      st_copy_x_1_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_tr0,
      st_copy_y_1_2_tr0 => exit_copy_y_1_sva,
      st_copy_x_1_1_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_1_tr0,
      st_copy_y_2_2_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_2_tr0,
      st_copy_x_2_tr0 => Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_2_tr0
    );
  fsm_output <= Main_Trans_Ond_Opt_core_fsm_inst_fsm_output;
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_tr0 <= NOT copy_y_slc_itm;
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_tr0 <= NOT (z_out_23(4));
  Main_Trans_Ond_Opt_core_fsm_inst_st_main_2_tr0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT
      (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(TO_STDLOGICVECTOR('1') & (NOT
      nbLevels_1_sva)) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 4), 4)), 3))) & (NOT
      (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(i_1_sg1_sva_1
      & STD_LOGIC_VECTOR'("01")), 6) + CONV_SIGNED(SIGNED(TO_STDLOGICVECTOR('1')
      & (NOT nbLevels_1_sva) & TO_STDLOGICVECTOR('1')), 6), 6)), 5)))), fsm_output(37));
  Main_Trans_Ond_Opt_core_fsm_inst_st_levels_tr0 <= NOT (z_out_16(7));
  Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_tr0 <= NOT (z_out_19(8));
  Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0 <= NOT (z_out_22(8));
  Main_Trans_Ond_Opt_core_fsm_inst_st_levels_1_tr0 <= exit_passe_x_1_sva_mx0 OR (NOT
      levels_nand_tmp);
  Main_Trans_Ond_Opt_core_fsm_inst_st_passe_x_1_tr0_1 <= NOT (z_out_16(7));
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_tr0 <= NOT (z_out_19(8));
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_1_1_tr0 <= NOT (copy_x_1_acc_3_itm(9));
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_y_2_2_tr0 <= NOT copy_y_2_slc_itm;
  Main_Trans_Ond_Opt_core_fsm_inst_st_copy_x_2_tr0 <= NOT (z_out_23(4));

  Src_rsc_singleport_data_out_mxwt <= MUX_v_8_2_2(Src_rsc_singleport_data_out & Src_rsc_singleport_data_out_bfwt,
      Src_rsc_singleport_bcwt);
  Dst_rsc_singleport_data_out_mxwt <= MUX_v_8_2_2(Dst_rsc_singleport_data_out & Dst_rsc_singleport_data_out_bfwt,
      Dst_rsc_singleport_bcwt);
  or_621_cse <= (or_dcpl_73 AND (fsm_output(31))) OR ((fsm_output(36)) AND (NOT (copy_x_1_acc_3_itm(9))));
  nor_3_cse <= NOT((fsm_output(5)) OR (fsm_output(1)));
  or_1126_rmff <= or_dcpl_1089 OR or_dcpl_1109 OR or_dcpl_1081 OR or_dcpl_1113;
  or_1143_rmff <= or_dcpl_1133 OR or_dcpl_22 OR (fsm_output(9)) OR (fsm_output(25))
      OR (fsm_output(28)) OR or_dcpl_586;
  nor_7_cse <= NOT((fsm_output(41)) OR (fsm_output(6)) OR (fsm_output(37)));
  Trans_Ond_x_1_sva_mx0 <= Trans_Ond_x_1_sva AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      (fsm_output(8)), 1),8));
  passe_y_acc_46_sdt_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_21),
      9) + CONV_UNSIGNED(UNSIGNED(Trans_Ond_y_1_sva), 9), 9));
  passe_y_acc_43_sdt_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Trans_Ond_y_1_sva),
      8) + CONV_UNSIGNED(UNSIGNED(Trans_Ond_x_1_sva(7 DOWNTO 6)), 8), 8));
  mux_43_cse <= MUX_v_8_2_2((z_out_4(8 DOWNTO 1)) & (z_out_3(8 DOWNTO 1)), z_out_14(9));
  image_copy_1_y_1_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(image_copy_1_y_1_sva(6
      DOWNTO 0)), 8) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 8), 8));
  levels_nand_tmp <= NOT((nbLevels_1_sva(0)) AND (UNSIGNED(i_1_sg1_sva_2) = UNSIGNED(nbLevels_1_sva(2
      DOWNTO 1))));
  exit_passe_x_1_sva_mx0 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT (z_out_20(6))) & (NOT
      (z_out_2(7)))), fsm_output(30));
  Trans_Ond_1_y_1_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(Trans_Ond_1_y_1_sva)
      + CONV_UNSIGNED(CONV_UNSIGNED('1', 1), 6), 6));
  Trans_Ond_1_x_1_sva_mx0 <= Trans_Ond_1_x_1_sva AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      (fsm_output(20)), 1),7));
  passe_y_1_acc_45_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Trans_Ond_1_y_1_sva
      & TO_STDLOGICVECTOR('1')), 8) + CONV_UNSIGNED(UNSIGNED'(hi_7_sg7_sva & hi_7_sg6_sva
      & hi_7_sg5_sva & hi_7_sg4_sva & hi_7_sg3_sva & hi_7_sg2_sva & (Trans_Ond_1_x_1_sva(6))),
      8), 8));
  passe_y_1_acc_43_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(Trans_Ond_1_y_1_sva
      & TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED(Trans_Ond_1_y_1_sva
      & STD_LOGIC_VECTOR'("00") & TO_STDLOGICVECTOR(Trans_Ond_1_x_1_sva(6))), 10),
      10));
  copy_y_1_acc_psp_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_18(7
      DOWNTO 2)), 8) + UNSIGNED(image_copy_1_y_1_sva), 8));
  image_copy_1_x_1_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(image_copy_1_x_1_sva_2),
      9) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 9), 9));
  i_1_sg1_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(i_1_sg1_sva_2),
      3) + CONV_SIGNED(CONV_UNSIGNED('1', 1), 3), 3));
  or_dcpl_6 <= (fsm_output(30)) OR (fsm_output(36));
  or_dcpl_9 <= (fsm_output(29)) OR (fsm_output(19));
  or_dcpl_12 <= (fsm_output(23)) OR (fsm_output(24));
  or_dcpl_19 <= (fsm_output(13)) OR (fsm_output(14));
  or_dcpl_21 <= (fsm_output(3)) OR (fsm_output(34));
  or_dcpl_22 <= (fsm_output(11)) OR (fsm_output(12));
  or_dcpl_26 <= (fsm_output(33)) OR (fsm_output(10));
  or_dcpl_29 <= (fsm_output(4)) OR (fsm_output(32));
  or_dcpl_73 <= NOT(levels_nand_svs AND passe_x_acc_3_cse_sg1);
  or_dcpl_89 <= (fsm_output(14)) OR (fsm_output(15));
  or_dcpl_569 <= or_dcpl_19 OR (fsm_output(15)) OR (fsm_output(16));
  or_dcpl_572 <= or_dcpl_22 OR (fsm_output(9));
  or_dcpl_579 <= (fsm_output(17)) OR (fsm_output(8));
  or_dcpl_580 <= or_dcpl_579 OR (fsm_output(5));
  or_dcpl_585 <= (fsm_output(6)) OR (fsm_output(37));
  or_dcpl_586 <= (fsm_output(26)) OR (fsm_output(27));
  or_dcpl_1080 <= (fsm_output(22)) OR (fsm_output(23));
  or_dcpl_1081 <= or_dcpl_1080 OR (fsm_output(24));
  or_dcpl_1083 <= (fsm_output(16)) OR (fsm_output(18)) OR (fsm_output(20));
  or_dcpl_1089 <= or_dcpl_21 OR (fsm_output(13));
  or_dcpl_1109 <= or_dcpl_89 OR (fsm_output(16));
  or_dcpl_1113 <= (fsm_output(38)) OR (fsm_output(21));
  or_1129_cse <= (fsm_output(25)) OR (fsm_output(28)) OR or_dcpl_586;
  or_dcpl_1133 <= (fsm_output(2)) OR (fsm_output(33)) OR (fsm_output(10));
  and_dcpl_16 <= NOT((fsm_output(6)) OR (fsm_output(37)));
  and_dcpl_23 <= NOT((fsm_output(17)) OR (fsm_output(8)));
  and_dcpl_33 <= NOT((fsm_output(20)) OR (fsm_output(29)));
  copy_x_1_acc_3_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(image_copy_1_y_1_sva_1
      & TO_STDLOGICVECTOR('1')), 10) + CONV_SIGNED(SIGNED'('1' & (NOT hi_7_sg7_sva)
      & (NOT hi_7_sg6_sva) & (NOT hi_7_sg5_sva) & (NOT hi_7_sg4_sva) & (NOT hi_7_sg3_sva)
      & (NOT hi_7_sg2_sva) & (NOT hi_7_sg1_sva) & '1'), 10), 10));
  or_1235_cse <= (fsm_output(25)) OR (fsm_output(27));
  Src_rsc_singleport_data_in_core <= MUX1HOT_v_8_4_2((z_out_11(8 DOWNTO 1)) & sub_6_mux_itm
      & moy_11_slc_itm & sub_11_mux_itm, STD_LOGIC_VECTOR'((fsm_output(25)) & (fsm_output(26))
      & (fsm_output(27)) & (fsm_output(28))));
  mux1h_18_nl <= MUX1HOT_s_1_4_2(STD_LOGIC_VECTOR'((z_out_17(8)) & (z_out_15(7))
      & (passe_y_acc_psp(7)) & (passe_y_acc_49_psp(8))), STD_LOGIC_VECTOR'((fsm_output(2))
      & (fsm_output(9)) & (fsm_output(10)) & or_dcpl_22));
  mux1h_38_nl <= MUX1HOT_s_1_7_2(STD_LOGIC_VECTOR'((z_out_17(7)) & (z_out_15(6))
      & (passe_y_acc_psp(6)) & (passe_y_acc_49_psp(7)) & (passe_y_1_acc_49_psp(7))
      & (passe_y_1_acc_13_itm(15)) & (copy_y_1_acc_psp_1(7))), STD_LOGIC_VECTOR'((fsm_output(2))
      & (fsm_output(9)) & (fsm_output(10)) & or_dcpl_22 & (fsm_output(27)) & (fsm_output(28))
      & (fsm_output(33))));
  mux1h_39_nl <= MUX1HOT_v_7_9_2((z_out_17(6 DOWNTO 0)) & ((z_out_15(5 DOWNTO 0))
      & TO_STDLOGICVECTOR(passe_y_acc_43_sdt_mx0w0(1))) & ((passe_y_acc_psp(5 DOWNTO
      0)) & TO_STDLOGICVECTOR(reg_passe_y_acc_43_sdt_tmp_6(1))) & (passe_y_acc_49_psp(6
      DOWNTO 0)) & (passe_y_1_acc_1_cse_1_sva(8 DOWNTO 2)) & (passe_y_1_acc_7_itm(14
      DOWNTO 8)) & (passe_y_1_acc_49_psp(6 DOWNTO 0)) & (passe_y_1_acc_13_itm(14
      DOWNTO 8)) & (copy_y_1_acc_psp_1(6 DOWNTO 0)), STD_LOGIC_VECTOR'((fsm_output(2))
      & (fsm_output(9)) & (fsm_output(10)) & or_dcpl_22 & (fsm_output(25)) & (fsm_output(26))
      & (fsm_output(27)) & (fsm_output(28)) & (fsm_output(33))));
  mux1h_40_nl <= MUX1HOT_v_2_8_2((z_out_18(1 DOWNTO 0)) & STD_LOGIC_VECTOR'((passe_y_acc_43_sdt_mx0w0(0))
      & (Trans_Ond_x_1_sva(5))) & STD_LOGIC_VECTOR'((reg_passe_y_acc_43_sdt_tmp_6(0))
      & (passe_y_slc_Trans_Ond_x_1_itm(5))) & reg_passe_y_acc_44_sdt_tmp_7 & (passe_y_1_acc_1_cse_1_sva(1
      DOWNTO 0)) & (passe_y_1_acc_7_itm(7 DOWNTO 6)) & reg_slc_slc_tmp_5 & (passe_y_1_acc_13_itm(7
      DOWNTO 6)), STD_LOGIC_VECTOR'(((fsm_output(2)) OR (fsm_output(33))) & (fsm_output(9))
      & (fsm_output(10)) & or_dcpl_22 & (fsm_output(25)) & (fsm_output(26)) & (fsm_output(27))
      & (fsm_output(28))));
  mux1h_41_nl <= MUX1HOT_v_5_9_2((image_copy_x_1_sva(5 DOWNTO 1)) & (Trans_Ond_x_1_sva(4
      DOWNTO 0)) & (passe_y_slc_Trans_Ond_x_1_itm(4 DOWNTO 0)) & Trans_Ond_x_slc_Trans_Ond_x_6_itm
      & passe_y_slc_Trans_Ond_x_1_1_itm & (Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm(5
      DOWNTO 1)) & (passe_y_1_acc_7_itm(5 DOWNTO 1)) & (passe_y_1_acc_13_itm(5 DOWNTO
      1)) & (image_copy_1_x_1_sva_2(5 DOWNTO 1)), STD_LOGIC_VECTOR'((fsm_output(2))
      & (fsm_output(9)) & (fsm_output(10)) & (fsm_output(11)) & (fsm_output(12))
      & or_1235_cse & (fsm_output(26)) & (fsm_output(28)) & (fsm_output(33))));
  mux1h_42_nl <= MUX1HOT_s_1_5_2(STD_LOGIC_VECTOR'((image_copy_x_1_sva(0)) & (Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm(0))
      & (passe_y_1_acc_7_itm(0)) & (passe_y_1_acc_13_itm(0)) & (image_copy_1_x_1_sva_2(0))),
      STD_LOGIC_VECTOR'((fsm_output(2)) & or_1235_cse & (fsm_output(26)) & (fsm_output(28))
      & (fsm_output(33))));
  Src_rsc_singleport_addr_core <= TO_STDLOGICVECTOR((mux1h_18_nl) AND (NOT((fsm_output(25))
      OR (fsm_output(26)) OR (fsm_output(27)) OR (fsm_output(28)) OR (fsm_output(33)))))
      & TO_STDLOGICVECTOR((mux1h_38_nl) AND (NOT((fsm_output(25)) OR (fsm_output(26)))))
      & (mux1h_39_nl) & (mux1h_40_nl) & (mux1h_41_nl) & TO_STDLOGICVECTOR(((mux1h_42_nl)
      AND (NOT((fsm_output(9)) OR (fsm_output(11))))) OR (fsm_output(10)) OR (fsm_output(12)));
  Src_rsc_singleport_re_core_sct <= Src_rsc_singleport_re_core_sct_reg;
  Src_rsc_singleport_we_core_sct <= Src_rsc_singleport_we_core_sct_reg;
  Dst_rsc_singleport_data_in_core <= MUX1HOT_v_8_5_2(Src_rsc_singleport_data_out_mxwt
      & (z_out_11(8 DOWNTO 1)) & sub_mux_itm & moy_5_slc_itm & sub_5_mux_itm, STD_LOGIC_VECTOR'(or_dcpl_21
      & (fsm_output(13)) & (fsm_output(14)) & (fsm_output(15)) & (fsm_output(16))));
  mux1h_16_nl <= MUX1HOT_s_1_4_2(STD_LOGIC_VECTOR'((reg_copy_y_acc_8_psp_cse(8))
      & (passe_y_acc_51_psp(8)) & (passe_y_acc_13_itm(16)) & (z_out_17(8))), STD_LOGIC_VECTOR'((fsm_output(3))
      & (fsm_output(15)) & (fsm_output(16)) & (fsm_output(38))));
  mux1h_34_nl <= MUX1HOT_v_8_10_2((reg_copy_y_acc_8_psp_cse(7 DOWNTO 0)) & passe_y_acc_psp
      & (passe_y_acc_7_itm(15 DOWNTO 8)) & (passe_y_acc_51_psp(7 DOWNTO 0)) & (passe_y_acc_13_itm(15
      DOWNTO 8)) & (passe_y_1_acc_43_itm(9 DOWNTO 2)) & (passe_y_1_acc_1_cse_1_sva(8
      DOWNTO 1)) & passe_y_1_acc_psp & copy_y_1_acc_psp & (z_out_17(7 DOWNTO 0)),
      STD_LOGIC_VECTOR'((fsm_output(3)) & (fsm_output(13)) & (fsm_output(14)) & (fsm_output(15))
      & (fsm_output(16)) & (fsm_output(21)) & (fsm_output(22)) & or_dcpl_12 & (fsm_output(34))
      & (fsm_output(38))));
  mux1h_35_nl <= MUX1HOT_v_2_9_2(reg_copy_y_acc_7_psp_6_cse & reg_passe_y_acc_43_sdt_tmp_6
      & (passe_y_acc_7_itm(7 DOWNTO 6)) & reg_passe_y_acc_46_sdt_tmp_7 & (passe_y_acc_13_itm(7
      DOWNTO 6)) & STD_LOGIC_VECTOR'((passe_y_1_acc_43_itm(1)) & (Trans_Ond_1_x_1_sva(5)))
      & STD_LOGIC_VECTOR'((passe_y_1_acc_1_cse_1_sva(0)) & (Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm(5)))
      & reg_passe_y_1_acc_44_sdt_tmp_6 & (z_out_18(1 DOWNTO 0)), STD_LOGIC_VECTOR'(or_dcpl_21
      & (fsm_output(13)) & (fsm_output(14)) & (fsm_output(15)) & (fsm_output(16))
      & (fsm_output(21)) & (fsm_output(22)) & or_dcpl_12 & (fsm_output(38))));
  mux1h_36_nl <= MUX1HOT_v_5_10_2((image_copy_x_1_sva(5 DOWNTO 1)) & (passe_y_slc_Trans_Ond_x_1_itm(5
      DOWNTO 1)) & (passe_y_acc_7_itm(5 DOWNTO 1)) & (Trans_Ond_x_slc_Trans_Ond_x_3_itm(5
      DOWNTO 1)) & (passe_y_acc_13_itm(5 DOWNTO 1)) & (Trans_Ond_1_x_1_sva(4 DOWNTO
      0)) & (Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm(4 DOWNTO 0)) & passe_y_1_slc_Trans_Ond_1_x_1_1_itm
      & (image_copy_1_x_slc_image_copy_1_x_1_itm(5 DOWNTO 1)) & (image_copy_2_x_1_sva(5
      DOWNTO 1)), STD_LOGIC_VECTOR'((fsm_output(3)) & (fsm_output(13)) & (fsm_output(14))
      & (fsm_output(15)) & (fsm_output(16)) & (fsm_output(21)) & (fsm_output(22))
      & or_dcpl_12 & (fsm_output(34)) & (fsm_output(38))));
  mux1h_37_nl <= MUX1HOT_s_1_7_2(STD_LOGIC_VECTOR'((image_copy_x_1_sva(0)) & (passe_y_slc_Trans_Ond_x_1_itm(0))
      & (passe_y_acc_7_itm(0)) & (Trans_Ond_x_slc_Trans_Ond_x_3_itm(0)) & (passe_y_acc_13_itm(0))
      & (image_copy_1_x_slc_image_copy_1_x_1_itm(0)) & (image_copy_2_x_1_sva(0))),
      STD_LOGIC_VECTOR'((fsm_output(3)) & (fsm_output(13)) & (fsm_output(14)) & (fsm_output(15))
      & (fsm_output(16)) & (fsm_output(34)) & (fsm_output(38))));
  Dst_rsc_singleport_addr_core <= TO_STDLOGICVECTOR((mux1h_16_nl) AND (NOT((fsm_output(13))
      OR (fsm_output(14)) OR (fsm_output(21)) OR (fsm_output(22)) OR (fsm_output(23))
      OR (fsm_output(24)) OR (fsm_output(34))))) & (mux1h_34_nl) & (mux1h_35_nl)
      & (mux1h_36_nl) & TO_STDLOGICVECTOR(((mux1h_37_nl) AND (NOT((fsm_output(21))
      OR (fsm_output(23))))) OR (fsm_output(22)) OR (fsm_output(24)));
  Dst_rsc_singleport_re_core_sct <= Dst_rsc_singleport_re_core_sct_reg;
  Dst_rsc_singleport_we_core_sct <= Dst_rsc_singleport_we_core_sct_reg;
  Vga_rsc_singleport_data_in_core <= Dst_rsc_singleport_data_out_mxwt;
  Vga_rsc_singleport_addr_core <= reg_copy_y_acc_8_psp_cse & reg_copy_y_acc_7_psp_6_cse
      & (image_copy_2_x_1_sva(5 DOWNTO 0));
  Vga_rsc_singleport_we_core_sct <= Vga_rsc_singleport_we_core_sct_reg;
  or_1240_cse <= (fsm_output(23)) OR (fsm_output(25));
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        Src_rsc_singleport_data_out_bfwt <= STD_LOGIC_VECTOR'("00000000");
        Dst_rsc_singleport_data_out_bfwt <= STD_LOGIC_VECTOR'("00000000");
      ELSE
        Src_rsc_singleport_data_out_bfwt <= Src_rsc_singleport_data_out_mxwt;
        Dst_rsc_singleport_data_out_bfwt <= Dst_rsc_singleport_data_out_mxwt;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        hi_7_sg7_sva <= '0';
        hi_7_sg6_sva <= '0';
        hi_7_sg5_sva <= '0';
        hi_7_sg4_sva <= '0';
        hi_7_sg3_sva <= '0';
        hi_7_sg2_sva <= '0';
        hi_7_sg1_sva <= '0';
        wi_7_sg8_sva <= '0';
        wi_7_sg7_sva <= '0';
        wi_7_sg6_sva <= '0';
        wi_7_sg5_sva <= '0';
        wi_7_sg4_sva <= '0';
        wi_7_sg3_sva <= '0';
        wi_7_sg2_sva <= '0';
        wi_7_sg1_sva <= '0';
        image_copy_y_1_sva <= STD_LOGIC_VECTOR'("00000000");
        reg_nbLevels_triosy_mgc_io_sync_iswt0_cse <= '0';
        reg_start_sync_mgc_bsync_vld_iswt0_cse <= '0';
        reg_Vga_rsc_singleport_we_core_psct_cse <= '0';
        reg_Dst_rsc_singleport_iswt0_cse <= '0';
        reg_Src_rsc_singleport_iswt0_cse <= '0';
        reg_Vga_rsc_singleport_data_in_core_cse <= STD_LOGIC_VECTOR'("00000000");
        nbLevels_1_sva <= STD_LOGIC_VECTOR'("000");
        image_copy_x_1_sva <= STD_LOGIC_VECTOR'("000000000");
        copy_y_slc_itm <= '0';
        reg_copy_y_acc_8_psp_cse <= STD_LOGIC_VECTOR'("000000000");
        image_copy_x_1_sva_1 <= STD_LOGIC_VECTOR'("000000000");
        i_1_sg1_sva_2 <= STD_LOGIC_VECTOR'("00");
        image_copy_2_y_1_sva <= STD_LOGIC_VECTOR'("00000000");
        image_copy_2_x_1_sva <= STD_LOGIC_VECTOR'("000000000");
        Trans_Ond_y_1_sva <= STD_LOGIC_VECTOR'("0000000");
        passe_x_acc_3_cse_sg1 <= '0';
        Trans_Ond_x_1_sva <= STD_LOGIC_VECTOR'("00000000");
        exit_passe_y_sva <= '0';
        Trans_Ond_x_slc_Trans_Ond_x_3_itm <= STD_LOGIC_VECTOR'("000000");
        passe_y_slc_Trans_Ond_x_1_itm <= STD_LOGIC_VECTOR'("000000");
        passe_y_slc_Trans_Ond_x_1_1_itm <= STD_LOGIC_VECTOR'("00000");
        Trans_Ond_x_slc_Trans_Ond_x_6_itm <= STD_LOGIC_VECTOR'("00000");
        passe_y_acc_13_itm <= STD_LOGIC_VECTOR'("00000000000000000");
        passe_y_acc_51_psp <= STD_LOGIC_VECTOR'("000000000");
        passe_y_acc_7_itm <= STD_LOGIC_VECTOR'("0000000000000000");
        passe_y_acc_psp <= STD_LOGIC_VECTOR'("00000000");
        passe_y_acc_49_psp <= STD_LOGIC_VECTOR'("000000000");
        moy_slc_Src_cse_sva <= STD_LOGIC_VECTOR'("00000000");
        sub_sub_return_3_lpi_3_dfm <= STD_LOGIC_VECTOR'("00000000");
        moy_acc_cse_sg1_sva <= STD_LOGIC_VECTOR'("00000000");
        sub_mux_itm <= STD_LOGIC_VECTOR'("00000000");
        sub_5_mux_itm <= STD_LOGIC_VECTOR'("00000000");
        moy_5_slc_itm <= STD_LOGIC_VECTOR'("00000000");
        image_copy_1_y_1_sva <= STD_LOGIC_VECTOR'("00000000");
        levels_nand_svs <= '0';
        Trans_Ond_1_y_1_sva <= STD_LOGIC_VECTOR'("000000");
        Trans_Ond_1_x_1_sva <= STD_LOGIC_VECTOR'("0000000");
        exit_passe_y_1_sva <= '0';
        Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm <= STD_LOGIC_VECTOR'("000000");
        passe_y_1_slc_Trans_Ond_1_x_1_1_itm <= STD_LOGIC_VECTOR'("00000");
        passe_y_1_acc_13_itm <= STD_LOGIC_VECTOR'("0000000000000000");
        passe_y_1_acc_49_psp <= STD_LOGIC_VECTOR'("00000000");
        passe_y_1_acc_7_itm <= STD_LOGIC_VECTOR'("000000000000000");
        passe_y_1_acc_1_cse_1_sva <= STD_LOGIC_VECTOR'("000000000");
        passe_y_1_acc_psp <= STD_LOGIC_VECTOR'("00000000");
        sub_sub_return_9_lpi_3_dfm <= STD_LOGIC_VECTOR'("00000000");
        moy_6_acc_cse_sg1_sva <= STD_LOGIC_VECTOR'("00000000");
        sub_6_mux_itm <= STD_LOGIC_VECTOR'("00000000");
        sub_11_mux_itm <= STD_LOGIC_VECTOR'("00000000");
        moy_11_slc_itm <= STD_LOGIC_VECTOR'("00000000");
        image_copy_1_x_1_sva_2 <= STD_LOGIC_VECTOR'("00000000");
        levels_asn_15_itm <= '0';
        levels_asn_14_itm <= '0';
        levels_asn_4_itm <= '0';
        levels_asn_3_itm <= '0';
        exit_copy_y_1_sva <= '0';
        image_copy_1_x_slc_image_copy_1_x_1_itm <= STD_LOGIC_VECTOR'("000000");
        copy_y_1_acc_psp <= STD_LOGIC_VECTOR'("00000000");
        copy_y_2_slc_itm <= '0';
        image_copy_2_x_1_sva_1 <= STD_LOGIC_VECTOR'("000000000");
        reg_copy_y_acc_7_psp_6_cse <= STD_LOGIC_VECTOR'("00");
        reg_passe_y_acc_46_sdt_tmp_7 <= STD_LOGIC_VECTOR'("00");
        reg_passe_y_acc_43_sdt_tmp_6 <= STD_LOGIC_VECTOR'("00");
        reg_passe_y_acc_44_sdt_tmp_7 <= STD_LOGIC_VECTOR'("00");
        reg_slc_slc_tmp_5 <= STD_LOGIC_VECTOR'("00");
        reg_passe_y_1_acc_44_sdt_tmp_6 <= STD_LOGIC_VECTOR'("00");
      ELSIF ( core_wen = '1' ) THEN
        hi_7_sg7_sva <= (hi_7_sg7_sva AND (NOT (fsm_output(37)))) OR (fsm_output(1));
        hi_7_sg6_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg6_sva & (hi_7_sg7_sva
            AND (NOT levels_nand_svs))), or_621_cse)) OR (fsm_output(1));
        hi_7_sg5_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg5_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(levels_asn_4_itm
            & levels_asn_3_itm), levels_nand_svs))), fsm_output(37))) OR (fsm_output(1));
        hi_7_sg4_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg4_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg5_sva
            & levels_asn_4_itm), levels_nand_svs))), fsm_output(37))) OR (fsm_output(1));
        hi_7_sg3_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg3_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg4_sva
            & hi_7_sg5_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        hi_7_sg2_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg2_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg3_sva
            & hi_7_sg4_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        hi_7_sg1_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg1_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg2_sva
            & hi_7_sg3_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        wi_7_sg8_sva <= (wi_7_sg8_sva AND (NOT (fsm_output(37)))) OR (fsm_output(1));
        wi_7_sg7_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg7_sva & (wi_7_sg8_sva
            AND (NOT levels_nand_svs))), or_621_cse)) AND (NOT (fsm_output(1)));
        wi_7_sg6_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg6_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(levels_asn_15_itm
            & levels_asn_14_itm), levels_nand_svs))), fsm_output(37))) OR (fsm_output(1));
        wi_7_sg5_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg5_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg6_sva
            & levels_asn_15_itm), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        wi_7_sg4_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg4_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg5_sva
            & wi_7_sg6_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        wi_7_sg3_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg3_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg4_sva
            & wi_7_sg5_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        wi_7_sg2_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg2_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg3_sva
            & wi_7_sg4_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        wi_7_sg1_sva <= (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg1_sva & (MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg2_sva
            & wi_7_sg3_sva), levels_nand_svs))), fsm_output(37))) AND (NOT (fsm_output(1)));
        image_copy_y_1_sva <= (MUX_v_8_2_2(z_out_16 & image_copy_y_1_sva, nor_3_cse))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(1)), 1),8));
        reg_nbLevels_triosy_mgc_io_sync_iswt0_cse <= (fsm_output(41)) AND (NOT (z_out_23(4)));
        reg_start_sync_mgc_bsync_vld_iswt0_cse <= NOT(or_dcpl_580 OR or_dcpl_29 OR
            (fsm_output(35)) OR (fsm_output(1)) OR (fsm_output(40)) OR (fsm_output(42))
            OR (fsm_output(41)) OR (fsm_output(2)) OR or_dcpl_26 OR (fsm_output(11))
            OR (fsm_output(12)) OR (fsm_output(9)) OR or_dcpl_1089 OR or_dcpl_89
            OR or_dcpl_1083 OR or_dcpl_1081 OR (fsm_output(38)) OR (fsm_output(7))
            OR (fsm_output(21)) OR or_dcpl_9 OR or_dcpl_6 OR (fsm_output(39)) OR
            (fsm_output(25)) OR (fsm_output(31)) OR (fsm_output(28)) OR (fsm_output(26))
            OR (fsm_output(27)) OR or_dcpl_585);
        reg_Vga_rsc_singleport_we_core_psct_cse <= fsm_output(39);
        reg_Dst_rsc_singleport_iswt0_cse <= or_1126_rmff;
        reg_Src_rsc_singleport_iswt0_cse <= or_1143_rmff;
        reg_Vga_rsc_singleport_data_in_core_cse <= Dst_rsc_singleport_data_out_mxwt;
        nbLevels_1_sva <= MUX_v_3_2_2(nbLevels_rsc_mgc_in_wire_d & nbLevels_1_sva,
            or_dcpl_580 OR or_dcpl_29 OR (fsm_output(35)) OR (fsm_output(2)) OR or_dcpl_26
            OR or_dcpl_572 OR or_dcpl_21 OR or_dcpl_569 OR (fsm_output(18)) OR (fsm_output(20))
            OR (fsm_output(22)) OR or_dcpl_12 OR (fsm_output(7)) OR (fsm_output(21))
            OR or_dcpl_9 OR or_dcpl_6 OR (fsm_output(25)) OR (fsm_output(31)) OR
            (fsm_output(28)) OR or_dcpl_586 OR or_dcpl_585);
        image_copy_x_1_sva <= (MUX_v_9_2_2(image_copy_x_1_sva_1 & image_copy_x_1_sva,
            NOT((fsm_output(5)) OR (fsm_output(4)) OR (fsm_output(1))))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(nor_3_cse,
            1),9));
        copy_y_slc_itm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(copy_y_slc_itm & (z_out(3))),
            fsm_output(2));
        reg_copy_y_acc_8_psp_cse <= z_out_17;
        image_copy_x_1_sva_1 <= MUX_v_9_2_2(image_copy_x_1_sva_1 & z_out_19, fsm_output(2));
        i_1_sg1_sva_2 <= (MUX_v_2_2_2((i_1_sg1_sva_1(1 DOWNTO 0)) & i_1_sg1_sva_2,
            and_dcpl_16)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(6)),
            1),2));
        image_copy_2_y_1_sva <= (MUX_v_8_2_2(z_out_16 & image_copy_2_y_1_sva, nor_7_cse))
            AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT or_dcpl_585, 1),8));
        image_copy_2_x_1_sva <= (MUX_v_9_2_2(image_copy_2_x_1_sva_1 & image_copy_2_x_1_sva,
            (NOT((fsm_output(40)) OR (fsm_output(41)))) AND and_dcpl_16)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(nor_7_cse,
            1),9));
        Trans_Ond_y_1_sva <= (MUX_v_7_2_2(z_out_20 & Trans_Ond_y_1_sva, NOT((fsm_output(18))
            OR (fsm_output(7))))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (fsm_output(7)), 1),7));
        passe_x_acc_3_cse_sg1 <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((z_out_16(7)) & passe_x_acc_3_cse_sg1),
            or_dcpl_579 OR (fsm_output(10)) OR or_dcpl_572 OR or_dcpl_19 OR (fsm_output(15))
            OR or_dcpl_1083 OR or_dcpl_1081 OR (fsm_output(21)) OR (fsm_output(29))
            OR (fsm_output(19)) OR (fsm_output(30)) OR (fsm_output(25)) OR (fsm_output(28))
            OR or_dcpl_586);
        Trans_Ond_x_1_sva <= (MUX_v_8_2_2(z_out_16 & Trans_Ond_x_1_sva, (fsm_output(17))
            OR (fsm_output(10)) OR or_dcpl_22 OR or_dcpl_569)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (fsm_output(8)), 1),8));
        exit_passe_y_sva <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_passe_y_sva & (NOT
            (z_out_12(9)))), fsm_output(9));
        Trans_Ond_x_slc_Trans_Ond_x_3_itm <= MUX_v_6_2_2((Trans_Ond_x_1_sva_mx0(5
            DOWNTO 0)) & Trans_Ond_x_slc_Trans_Ond_x_3_itm, and_dcpl_23);
        passe_y_slc_Trans_Ond_x_1_itm <= MUX_v_6_2_2((Trans_Ond_x_1_sva_mx0(5 DOWNTO
            0)) & passe_y_slc_Trans_Ond_x_1_itm, and_dcpl_23);
        passe_y_slc_Trans_Ond_x_1_1_itm <= MUX_v_5_2_2((Trans_Ond_x_1_sva_mx0(4 DOWNTO
            0)) & passe_y_slc_Trans_Ond_x_1_1_itm, and_dcpl_23);
        Trans_Ond_x_slc_Trans_Ond_x_6_itm <= MUX_v_5_2_2((Trans_Ond_x_1_sva_mx0(4
            DOWNTO 0)) & Trans_Ond_x_slc_Trans_Ond_x_6_itm, and_dcpl_23);
        passe_y_acc_13_itm <= MUX_v_17_2_2(passe_y_acc_13_itm & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_2
            & (passe_y_acc_46_sdt_mx0w0(1 DOWNTO 0)) & (Trans_Ond_x_1_sva(5 DOWNTO
            0))) + CONV_UNSIGNED(UNSIGNED'(wi_7_sg8_sva & wi_7_sg7_sva & wi_7_sg6_sva
            & wi_7_sg5_sva & wi_7_sg4_sva & wi_7_sg3_sva & wi_7_sg2_sva & wi_7_sg1_sva),
            17), 17)), fsm_output(9));
        passe_y_acc_51_psp <= MUX_v_9_2_2(passe_y_acc_51_psp & z_out_2, fsm_output(9));
        passe_y_acc_7_itm <= MUX_v_16_2_2(passe_y_acc_7_itm & z_out_1, fsm_output(9));
        passe_y_acc_psp <= MUX_v_8_2_2(passe_y_acc_psp & z_out_15, fsm_output(9));
        passe_y_acc_49_psp <= MUX_v_9_2_2(passe_y_acc_49_psp & STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_18(8
            DOWNTO 2)), 9) + CONV_UNSIGNED(UNSIGNED(Trans_Ond_y_1_sva & TO_STDLOGICVECTOR('1')),
            9), 9)), fsm_output(9));
        moy_slc_Src_cse_sva <= Src_rsc_singleport_data_out_mxwt;
        sub_sub_return_3_lpi_3_dfm <= MUX1HOT_v_8_3_2((z_out_3(8 DOWNTO 1)) & (z_out_4(8
            DOWNTO 1)) & sub_sub_return_3_lpi_3_dfm, STD_LOGIC_VECTOR'(((fsm_output(11))
            AND (z_out_14(9))) & ((fsm_output(11)) AND (NOT (z_out_14(9)))) & (NOT
            (fsm_output(11)))));
        moy_acc_cse_sg1_sva <= MUX_v_8_2_2(moy_acc_cse_sg1_sva & (z_out_9(8 DOWNTO
            1)), fsm_output(11));
        sub_mux_itm <= MUX_v_8_2_2((z_out_6(8 DOWNTO 1)) & (z_out_5(8 DOWNTO 1)),
            z_out_12(9));
        sub_5_mux_itm <= MUX1HOT_v_8_3_2((z_out_7(8 DOWNTO 1)) & (z_out_8(8 DOWNTO
            1)) & sub_5_mux_itm, STD_LOGIC_VECTOR'(((fsm_output(13)) AND (z_out_13(9)))
            & ((fsm_output(13)) AND (NOT (z_out_13(9)))) & (NOT (fsm_output(13)))));
        moy_5_slc_itm <= MUX_v_8_2_2(moy_5_slc_itm & (z_out_10(8 DOWNTO 1)), fsm_output(13));
        image_copy_1_y_1_sva <= (MUX_v_8_2_2(image_copy_1_y_1_sva_1 & image_copy_1_y_1_sva,
            NOT((fsm_output(36)) OR (fsm_output(31))))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (fsm_output(31)), 1),8));
        levels_nand_svs <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(levels_nand_svs & levels_nand_tmp),
            fsm_output(19));
        Trans_Ond_1_y_1_sva <= (MUX_v_6_2_2(Trans_Ond_1_y_1_sva_1 & Trans_Ond_1_y_1_sva,
            NOT((fsm_output(19)) OR (fsm_output(30))))) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (fsm_output(19)), 1),6));
        Trans_Ond_1_x_1_sva <= (MUX_v_7_2_2(z_out_20 & Trans_Ond_1_x_1_sva, or_dcpl_1080
            OR (fsm_output(24)) OR (fsm_output(29)) OR or_1129_cse)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
            (fsm_output(20)), 1),7));
        exit_passe_y_1_sva <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_passe_y_1_sva &
            (NOT (z_out_22(8)))), fsm_output(21));
        Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm <= MUX_v_6_2_2((Trans_Ond_1_x_1_sva_mx0(5
            DOWNTO 0)) & Trans_Ond_1_x_slc_Trans_Ond_1_x_1_itm, and_dcpl_33);
        passe_y_1_slc_Trans_Ond_1_x_1_1_itm <= MUX_v_5_2_2((Trans_Ond_1_x_1_sva_mx0(4
            DOWNTO 0)) & passe_y_1_slc_Trans_Ond_1_x_1_1_itm, and_dcpl_33);
        passe_y_1_acc_13_itm <= MUX_v_16_2_2(passe_y_1_acc_13_itm & z_out_1, fsm_output(21));
        passe_y_1_acc_49_psp <= MUX_v_8_2_2(passe_y_1_acc_49_psp & z_out_15, fsm_output(21));
        passe_y_1_acc_7_itm <= MUX_v_15_2_2(passe_y_1_acc_7_itm & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED((passe_y_1_acc_43_itm(9
            DOWNTO 1)) & (Trans_Ond_1_x_1_sva(5 DOWNTO 0))) + CONV_UNSIGNED(UNSIGNED'(wi_7_sg8_sva
            & wi_7_sg7_sva & wi_7_sg6_sva & wi_7_sg5_sva & wi_7_sg4_sva & wi_7_sg3_sva
            & wi_7_sg2_sva), 15), 15)), fsm_output(21));
        passe_y_1_acc_1_cse_1_sva <= MUX_v_9_2_2(passe_y_1_acc_1_cse_1_sva & (passe_y_1_acc_43_itm(9
            DOWNTO 1)), fsm_output(21));
        passe_y_1_acc_psp <= MUX_v_8_2_2(passe_y_1_acc_psp & STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_21(7
            DOWNTO 2)), 8) + CONV_UNSIGNED(UNSIGNED(Trans_Ond_1_y_1_sva & TO_STDLOGICVECTOR('1')),
            8), 8)), fsm_output(21));
        sub_sub_return_9_lpi_3_dfm <= MUX1HOT_v_8_3_2((z_out_3(8 DOWNTO 1)) & (z_out_4(8
            DOWNTO 1)) & sub_sub_return_9_lpi_3_dfm, STD_LOGIC_VECTOR'(((fsm_output(23))
            AND (z_out_14(9))) & ((fsm_output(23)) AND (NOT (z_out_14(9)))) & (NOT
            (fsm_output(23)))));
        moy_6_acc_cse_sg1_sva <= MUX_v_8_2_2(moy_6_acc_cse_sg1_sva & (z_out_9(8 DOWNTO
            1)), fsm_output(23));
        sub_6_mux_itm <= MUX_v_8_2_2((z_out_6(8 DOWNTO 1)) & (z_out_7(8 DOWNTO 1)),
            z_out_12(9));
        sub_11_mux_itm <= MUX1HOT_v_8_3_2((z_out_8(8 DOWNTO 1)) & (z_out_5(8 DOWNTO
            1)) & sub_11_mux_itm, STD_LOGIC_VECTOR'(((fsm_output(25)) AND (z_out_13(9)))
            & ((fsm_output(25)) AND (NOT (z_out_13(9)))) & (NOT (fsm_output(25)))));
        moy_11_slc_itm <= MUX_v_8_2_2(moy_11_slc_itm & (z_out_10(8 DOWNTO 1)), fsm_output(25));
        image_copy_1_x_1_sva_2 <= (MUX_v_8_2_2((image_copy_1_x_1_sva_1(7 DOWNTO 0))
            & image_copy_1_x_1_sva_2, (fsm_output(35)) OR (fsm_output(34)))) AND
            STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(32)), 1),8));
        levels_asn_15_itm <= wi_7_sg7_sva;
        levels_asn_14_itm <= wi_7_sg8_sva;
        levels_asn_4_itm <= hi_7_sg6_sva;
        levels_asn_3_itm <= hi_7_sg7_sva;
        exit_copy_y_1_sva <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(exit_copy_y_1_sva & (NOT
            (readindex(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(image_copy_1_x_1_sva_1
            & TO_STDLOGICVECTOR('1')), 11) + CONV_SIGNED(SIGNED'('1' & (NOT wi_7_sg8_sva)
            & (NOT wi_7_sg7_sva) & (NOT wi_7_sg6_sva) & (NOT wi_7_sg5_sva) & (NOT
            wi_7_sg4_sva) & (NOT wi_7_sg3_sva) & (NOT wi_7_sg2_sva) & (NOT wi_7_sg1_sva)
            & '1'), 11), 11)), 10)))), fsm_output(33));
        image_copy_1_x_slc_image_copy_1_x_1_itm <= MUX_v_6_2_2(((image_copy_1_x_1_sva_2(5
            DOWNTO 0)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (fsm_output(32)),
            1),6))) & image_copy_1_x_slc_image_copy_1_x_1_itm, NOT((fsm_output(32))
            OR (fsm_output(35))));
        copy_y_1_acc_psp <= copy_y_1_acc_psp_1;
        copy_y_2_slc_itm <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(copy_y_2_slc_itm & (z_out(3))),
            fsm_output(38));
        image_copy_2_x_1_sva_1 <= MUX_v_9_2_2(image_copy_2_x_1_sva_1 & z_out_19,
            fsm_output(38));
        reg_copy_y_acc_7_psp_6_cse <= z_out_18(1 DOWNTO 0);
        reg_passe_y_acc_46_sdt_tmp_7 <= MUX_v_2_2_2(reg_passe_y_acc_46_sdt_tmp_7
            & (passe_y_acc_46_sdt_mx0w0(1 DOWNTO 0)), fsm_output(9));
        reg_passe_y_acc_43_sdt_tmp_6 <= MUX_v_2_2_2(reg_passe_y_acc_43_sdt_tmp_6
            & (passe_y_acc_43_sdt_mx0w0(1 DOWNTO 0)), fsm_output(9));
        reg_passe_y_acc_44_sdt_tmp_7 <= MUX_v_2_2_2(reg_passe_y_acc_44_sdt_tmp_7
            & (z_out_18(1 DOWNTO 0)), fsm_output(9));
        reg_slc_slc_tmp_5 <= MUX_v_2_2_2(reg_slc_slc_tmp_5 & (passe_y_1_acc_45_itm(2
            DOWNTO 1)), fsm_output(21));
        reg_passe_y_1_acc_44_sdt_tmp_6 <= MUX_v_2_2_2(reg_passe_y_1_acc_44_sdt_tmp_6
            & (z_out_21(1 DOWNTO 0)), fsm_output(21));
      END IF;
    END IF;
  END PROCESS;
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_19(8 DOWNTO
      6)), 4) + UNSIGNED'("1011"), 4));
  mux_83_nl <= MUX_v_2_2_2((passe_y_acc_43_sdt_mx0w0(1 DOWNTO 0)) & (passe_y_1_acc_45_itm(2
      DOWNTO 1)), fsm_output(21));
  mux_126_nl <= MUX_v_6_2_2((Trans_Ond_x_1_sva(5 DOWNTO 0)) & (Trans_Ond_1_x_1_sva(5
      DOWNTO 0)), fsm_output(21));
  mux_84_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg7_sva & wi_7_sg8_sva), fsm_output(21));
  mux_127_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg6_sva & wi_7_sg7_sva), fsm_output(21));
  mux_128_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg5_sva & wi_7_sg6_sva), fsm_output(21));
  mux_129_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg4_sva & wi_7_sg5_sva), fsm_output(21));
  mux_130_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg3_sva & wi_7_sg4_sva), fsm_output(21));
  mux_131_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg2_sva & wi_7_sg3_sva), fsm_output(21));
  mux_132_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(wi_7_sg1_sva & wi_7_sg2_sva), fsm_output(21));
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_15 & (mux_83_nl) & (mux_126_nl))
      + CONV_UNSIGNED(UNSIGNED'((wi_7_sg8_sva AND (NOT (fsm_output(21)))) & (mux_84_nl)
      & (mux_127_nl) & (mux_128_nl) & (mux_129_nl) & (mux_130_nl) & (mux_131_nl)
      & (mux_132_nl)), 16), 16));
  mux_85_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(passe_y_acc_46_sdt_mx0w0(8
      DOWNTO 2)), 8) + CONV_UNSIGNED(UNSIGNED'(hi_7_sg7_sva & hi_7_sg6_sva & hi_7_sg5_sva
      & hi_7_sg4_sva & hi_7_sg3_sva & hi_7_sg2_sva & hi_7_sg1_sva), 8), 8)) & STD_LOGIC_VECTOR'('1'
      & (NOT hi_7_sg7_sva) & (NOT hi_7_sg6_sva) & (NOT hi_7_sg5_sva) & (NOT hi_7_sg4_sva)
      & (NOT hi_7_sg3_sva) & (NOT hi_7_sg2_sva) & '1'), fsm_output(30));
  mux_86_nl <= MUX_v_7_2_2(Trans_Ond_y_1_sva & (Trans_Ond_1_y_1_sva_1 & TO_STDLOGICVECTOR('1')),
      fsm_output(30));
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_85_nl), 9)
      + CONV_UNSIGNED(UNSIGNED(mux_86_nl), 9), 9));
  mux_133_cse <= MUX_v_8_2_2(moy_slc_Src_cse_sva & reg_Vga_rsc_singleport_data_in_core_cse,
      or_1240_cse);
  mux_134_nl <= MUX_v_8_2_2((NOT Src_rsc_singleport_data_out_mxwt) & (NOT Dst_rsc_singleport_data_out_mxwt),
      or_1240_cse);
  z_out_3 <= (readslice(STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_133_cse
      & TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED((mux_134_nl) & TO_STDLOGICVECTOR('1')),
      10), 10)), 1, 9)) & TO_STDLOGICVECTOR('0');
  mux_136_cse <= MUX_v_8_2_2((NOT moy_slc_Src_cse_sva) & (NOT reg_Vga_rsc_singleport_data_in_core_cse),
      or_1240_cse);
  mux_135_cse <= MUX_v_8_2_2(Src_rsc_singleport_data_out_mxwt & Dst_rsc_singleport_data_out_mxwt,
      or_1240_cse);
  z_out_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_135_cse &
      TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED(mux_136_cse & TO_STDLOGICVECTOR('1')),
      10), 10));
  mux_87_nl <= MUX_v_8_2_2(moy_acc_cse_sg1_sva & mux_43_cse, fsm_output(25));
  mux_88_nl <= MUX_v_8_2_2((NOT (z_out_9(8 DOWNTO 1))) & (NOT sub_sub_return_9_lpi_3_dfm),
      fsm_output(25));
  z_out_5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((mux_87_nl) &
      TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED((mux_88_nl) & TO_STDLOGICVECTOR('1')),
      10), 10));
  mux_90_nl <= MUX_v_8_2_2((NOT moy_acc_cse_sg1_sva) & (NOT moy_6_acc_cse_sg1_sva),
      fsm_output(25));
  z_out_6 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((z_out_9(8 DOWNTO
      1)) & TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED((mux_90_nl) & TO_STDLOGICVECTOR('1')),
      10), 10));
  mux_91_nl <= MUX_v_8_2_2(sub_sub_return_3_lpi_3_dfm & moy_6_acc_cse_sg1_sva, fsm_output(25));
  mux_92_nl <= MUX_v_8_2_2((NOT mux_43_cse) & (NOT (z_out_9(8 DOWNTO 1))), fsm_output(25));
  z_out_7 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((mux_91_nl) &
      TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED((mux_92_nl) & TO_STDLOGICVECTOR('1')),
      10), 10));
  mux_93_nl <= MUX_v_8_2_2(mux_43_cse & sub_sub_return_9_lpi_3_dfm, fsm_output(25));
  mux_94_nl <= MUX_v_8_2_2((NOT sub_sub_return_3_lpi_3_dfm) & (NOT mux_43_cse), fsm_output(25));
  z_out_8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((mux_93_nl) &
      TO_STDLOGICVECTOR('1')), 10) + CONV_UNSIGNED(UNSIGNED((mux_94_nl) & TO_STDLOGICVECTOR('1')),
      10), 10));
  z_out_9 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_133_cse),
      9) + CONV_UNSIGNED(UNSIGNED(mux_135_cse), 9), 9));
  mux_97_nl <= MUX_v_8_2_2(sub_sub_return_3_lpi_3_dfm & sub_sub_return_9_lpi_3_dfm,
      fsm_output(25));
  z_out_10 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_97_nl), 9)
      + CONV_UNSIGNED(UNSIGNED(mux_43_cse), 9), 9));
  mux_99_nl <= MUX_v_8_2_2(moy_6_acc_cse_sg1_sva & moy_acc_cse_sg1_sva, fsm_output(13));
  z_out_11 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_99_nl), 9)
      + CONV_UNSIGNED(UNSIGNED(z_out_9(8 DOWNTO 1)), 9), 9));
  mux_137_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'((NOT wi_7_sg8_sva) & (NOT wi_7_sg7_sva)
      & (NOT wi_7_sg6_sva) & (NOT wi_7_sg5_sva) & (NOT wi_7_sg4_sva) & (NOT wi_7_sg3_sva)
      & (NOT wi_7_sg2_sva) & (NOT wi_7_sg1_sva)) & (z_out_9(8 DOWNTO 1)), (fsm_output(13))
      OR (fsm_output(25)));
  mux1h_102_nl <= MUX1HOT_v_8_3_2((NOT moy_acc_cse_sg1_sva) & (NOT moy_6_acc_cse_sg1_sva)
      & z_out_16, STD_LOGIC_VECTOR'((fsm_output(13)) & (fsm_output(25)) & (fsm_output(9))));
  z_out_12 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR('1')
      & (mux_137_nl) & TO_STDLOGICVECTOR('1')), 11) + CONV_UNSIGNED(UNSIGNED((mux1h_102_nl)
      & TO_STDLOGICVECTOR('1')), 11), 11));
  mux_102_nl <= MUX_v_8_2_2((NOT sub_sub_return_3_lpi_3_dfm) & (NOT sub_sub_return_9_lpi_3_dfm),
      fsm_output(25));
  z_out_13 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR('1')
      & mux_43_cse & TO_STDLOGICVECTOR('1')), 11) + CONV_UNSIGNED(UNSIGNED((mux_102_nl)
      & TO_STDLOGICVECTOR('1')), 11), 11));
  mux_138_nl <= MUX_v_8_2_2(Src_rsc_singleport_data_out_mxwt & Dst_rsc_singleport_data_out_mxwt,
      (fsm_output(25)) OR (fsm_output(23)));
  z_out_14 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR('1')
      & (mux_138_nl) & TO_STDLOGICVECTOR('1')), 11) + CONV_UNSIGNED(UNSIGNED(mux_136_cse
      & TO_STDLOGICVECTOR('1')), 11), 11));
  mux_103_nl <= MUX_v_7_2_2(Trans_Ond_y_1_sva & STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR(hi_7_sg7_sva)
      & (passe_y_1_acc_45_itm(7 DOWNTO 3))), 7) + CONV_UNSIGNED(UNSIGNED'(hi_7_sg6_sva
      & hi_7_sg5_sva & hi_7_sg4_sva & hi_7_sg3_sva & hi_7_sg2_sva), 7), 7)), fsm_output(21));
  mux_104_nl <= MUX_v_6_2_2((passe_y_acc_43_sdt_mx0w0(7 DOWNTO 2)) & Trans_Ond_1_y_1_sva,
      fsm_output(21));
  z_out_15 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_103_nl),
      8) + CONV_UNSIGNED(UNSIGNED(mux_104_nl), 8), 8));
  mux1h_105_nl <= MUX1HOT_s_1_3_2(STD_LOGIC_VECTOR'((image_copy_y_1_sva(7)) & (image_copy_2_y_1_sva(7))
      & (Trans_Ond_x_1_sva(7))), STD_LOGIC_VECTOR'((fsm_output(5)) & (fsm_output(41))
      & (fsm_output(9))));
  mux1h_111_nl <= MUX1HOT_v_7_5_2((image_copy_y_1_sva(6 DOWNTO 0)) & (image_copy_2_y_1_sva(6
      DOWNTO 0)) & STD_LOGIC_VECTOR'((NOT hi_7_sg7_sva) & (NOT hi_7_sg6_sva) & (NOT
      hi_7_sg5_sva) & (NOT hi_7_sg4_sva) & (NOT hi_7_sg3_sva) & (NOT hi_7_sg2_sva)
      & (NOT hi_7_sg1_sva)) & (Trans_Ond_x_1_sva(6 DOWNTO 0)) & STD_LOGIC_VECTOR'((NOT
      wi_7_sg8_sva) & (NOT wi_7_sg7_sva) & (NOT wi_7_sg6_sva) & (NOT wi_7_sg5_sva)
      & (NOT wi_7_sg4_sva) & (NOT wi_7_sg3_sva) & (NOT wi_7_sg2_sva)), STD_LOGIC_VECTOR'((fsm_output(5))
      & (fsm_output(41)) & (fsm_output(7)) & (fsm_output(9)) & (fsm_output(20))));
  z_out_16 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR((mux1h_105_nl)
      OR (fsm_output(7)) OR (fsm_output(20))) & (mux1h_111_nl)) + UNSIGNED'("00000001"),
      8));
  mux_105_nl <= MUX_v_8_2_2(image_copy_y_1_sva & image_copy_2_y_1_sva, fsm_output(38));
  z_out_17 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux_105_nl),
      9) + CONV_UNSIGNED(UNSIGNED(z_out_18(7 DOWNTO 2)), 9), 9));
  mux1h_106_nl <= MUX1HOT_v_8_4_2(image_copy_y_1_sva & (Trans_Ond_y_1_sva & TO_STDLOGICVECTOR('1'))
      & image_copy_1_y_1_sva & image_copy_2_y_1_sva, STD_LOGIC_VECTOR'((fsm_output(2))
      & (fsm_output(9)) & (fsm_output(33)) & (fsm_output(38))));
  mux1h_107_nl <= MUX1HOT_v_3_4_2((image_copy_x_1_sva(8 DOWNTO 6)) & (Trans_Ond_x_1_sva(7
      DOWNTO 5)) & (TO_STDLOGICVECTOR('0') & (image_copy_1_x_1_sva_2(7 DOWNTO 6)))
      & (image_copy_2_x_1_sva(8 DOWNTO 6)), STD_LOGIC_VECTOR'((fsm_output(2)) & (fsm_output(9))
      & (fsm_output(33)) & (fsm_output(38))));
  z_out_18 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(mux1h_106_nl),
      9) + CONV_UNSIGNED(UNSIGNED(mux1h_107_nl), 9), 9));
  mux1h_108_nl <= MUX1HOT_v_9_3_2(image_copy_x_1_sva & STD_LOGIC_VECTOR'('1' & (NOT
      wi_7_sg8_sva) & (NOT wi_7_sg7_sva) & (NOT wi_7_sg6_sva) & (NOT wi_7_sg5_sva)
      & (NOT wi_7_sg4_sva) & (NOT wi_7_sg3_sva) & (NOT wi_7_sg2_sva) & (NOT wi_7_sg1_sva))
      & image_copy_2_x_1_sva, STD_LOGIC_VECTOR'((fsm_output(2)) & ((fsm_output(8))
      OR (fsm_output(32))) & (fsm_output(38))));
  z_out_19 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(mux1h_108_nl) + UNSIGNED'("000000001"),
      9));
  mux1h_109_nl <= MUX1HOT_v_7_3_2(Trans_Ond_y_1_sva & STD_LOGIC_VECTOR'('1' & (NOT
      hi_7_sg7_sva) & (NOT hi_7_sg6_sva) & (NOT hi_7_sg5_sva) & (NOT hi_7_sg4_sva)
      & (NOT hi_7_sg3_sva) & (NOT hi_7_sg2_sva)) & Trans_Ond_1_x_1_sva, STD_LOGIC_VECTOR'((fsm_output(18))
      & (fsm_output(19)) & (fsm_output(21))));
  z_out_20 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(mux1h_109_nl) + UNSIGNED'("0000001"),
      7));
  mux_107_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg7_sva & (Trans_Ond_1_y_1_sva(5))),
      fsm_output(21));
  mux_140_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg6_sva & (Trans_Ond_1_y_1_sva(4))),
      fsm_output(21));
  mux_123_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg5_sva & (Trans_Ond_1_y_1_sva(3))),
      fsm_output(21));
  mux_124_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg4_sva & (Trans_Ond_1_y_1_sva(2))),
      fsm_output(21));
  mux_125_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg3_sva & (Trans_Ond_1_y_1_sva(1))),
      fsm_output(21));
  mux_141_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'(hi_7_sg2_sva & (Trans_Ond_1_y_1_sva(0))),
      fsm_output(21));
  mux_108_nl <= MUX_v_2_2_2((Trans_Ond_x_1_sva(7 DOWNTO 6)) & (Trans_Ond_1_x_1_sva(6
      DOWNTO 5)), fsm_output(21));
  z_out_21 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'((mux_107_nl)
      & (mux_140_nl) & (mux_123_nl) & (mux_124_nl) & (mux_125_nl) & (mux_141_nl)
      & (hi_7_sg1_sva OR (fsm_output(21)))), 8) + CONV_UNSIGNED(UNSIGNED(mux_108_nl),
      8), 8));
  mux_109_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg7_sva) & (NOT wi_7_sg8_sva)),
      fsm_output(21));
  mux_142_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg6_sva) & (NOT wi_7_sg7_sva)),
      fsm_output(21));
  mux_143_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg5_sva) & (NOT wi_7_sg6_sva)),
      fsm_output(21));
  mux_144_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg4_sva) & (NOT wi_7_sg5_sva)),
      fsm_output(21));
  mux_145_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg3_sva) & (NOT wi_7_sg4_sva)),
      fsm_output(21));
  mux_146_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg2_sva) & (NOT wi_7_sg3_sva)),
      fsm_output(21));
  mux_147_nl <= MUX_s_1_2_2(STD_LOGIC_VECTOR'((NOT hi_7_sg1_sva) & (NOT wi_7_sg2_sva)),
      fsm_output(21));
  z_out_22 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'('1' & (mux_109_nl)
      & (mux_142_nl) & (mux_143_nl) & (mux_144_nl) & (mux_145_nl) & (mux_146_nl)
      & (mux_147_nl) & '1'), 10) + CONV_UNSIGNED(UNSIGNED(z_out_20 & TO_STDLOGICVECTOR('1')),
      10), 10));
  z_out_23 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(TO_STDLOGICVECTOR('1') & (z_out_16(7
      DOWNTO 4))) + UNSIGNED'("00001"), 5));
END v2;

-- ------------------------------------------------------------------
--  Design Unit:    Main_Trans_Ond_Opt
--  Generated from file(s):
--    3) $PROJECT_HOME/Rendu/src/CPP_for_Catapult/Main_Trans_Ond_opt.cpp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps.ALL;
USE work.Main_Trans_Ond_Opt_mux_pkg.ALL;


ENTITY Main_Trans_Ond_Opt IS
  PORT(
    start : IN STD_LOGIC;
    done : OUT STD_LOGIC;
    nbLevels_rsc_z : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
    nbLevels_triosy_lz : OUT STD_LOGIC;
    Src_triosy_lz : OUT STD_LOGIC;
    Dst_triosy_lz : OUT STD_LOGIC;
    Vga_triosy_lz : OUT STD_LOGIC;
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    Src_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Src_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Src_rsc_singleport_re : OUT STD_LOGIC;
    Src_rsc_singleport_we : OUT STD_LOGIC;
    Src_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    Dst_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Dst_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Dst_rsc_singleport_re : OUT STD_LOGIC;
    Dst_rsc_singleport_we : OUT STD_LOGIC;
    Dst_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    Vga_rsc_singleport_data_in : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    Vga_rsc_singleport_addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    Vga_rsc_singleport_re : OUT STD_LOGIC;
    Vga_rsc_singleport_we : OUT STD_LOGIC;
    Vga_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0)
  );
END Main_Trans_Ond_Opt;

ARCHITECTURE v2 OF Main_Trans_Ond_Opt IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL Src_rsc_singleport_data_in_core : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Src_rsc_singleport_addr_core : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL Src_rsc_singleport_re_core_sct : STD_LOGIC;
  SIGNAL Src_rsc_singleport_we_core_sct : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_data_in_core : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Dst_rsc_singleport_addr_core : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL Dst_rsc_singleport_re_core_sct : STD_LOGIC;
  SIGNAL Dst_rsc_singleport_we_core_sct : STD_LOGIC;
  SIGNAL Vga_rsc_singleport_data_in_core : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL Vga_rsc_singleport_addr_core : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL Vga_rsc_singleport_we_core_sct : STD_LOGIC;
  SIGNAL nbLevels_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mgc_start_sync_mgc_bsync_vld_vd : STD_LOGIC;
  SIGNAL mgc_done_sync_mgc_bsync_rdy_rd_core_sct : STD_LOGIC;
  SIGNAL Vga_triosy_mgc_io_sync_ld_core_sct : STD_LOGIC;
  SIGNAL Dst_triosy_mgc_io_sync_ld_core_sct : STD_LOGIC;
  SIGNAL Src_triosy_mgc_io_sync_ld_core_sct : STD_LOGIC;
  SIGNAL nbLevels_triosy_mgc_io_sync_ld_core_sct : STD_LOGIC;

  SIGNAL nbLevels_rsc_mgc_in_wire_d_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL nbLevels_rsc_mgc_in_wire_z : STD_LOGIC_VECTOR (2 DOWNTO 0);

  COMPONENT Main_Trans_Ond_Opt_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      Src_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      Dst_rsc_singleport_data_out : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      Src_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      Src_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      Src_rsc_singleport_re_core_sct : OUT STD_LOGIC;
      Src_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      Dst_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      Dst_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      Dst_rsc_singleport_re_core_sct : OUT STD_LOGIC;
      Dst_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      Vga_rsc_singleport_data_in_core : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      Vga_rsc_singleport_addr_core : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      Vga_rsc_singleport_we_core_sct : OUT STD_LOGIC;
      nbLevels_rsc_mgc_in_wire_d : IN STD_LOGIC_VECTOR (2 DOWNTO 0);
      mgc_start_sync_mgc_bsync_vld_vd : IN STD_LOGIC;
      mgc_done_sync_mgc_bsync_rdy_rd_core_sct : OUT STD_LOGIC;
      Vga_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      Dst_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      Src_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC;
      nbLevels_triosy_mgc_io_sync_ld_core_sct : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_out : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_out : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_in_core : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_addr_core : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_in_core : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_addr_core : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_data_in_core : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_addr_core : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL Main_Trans_Ond_Opt_core_inst_nbLevels_rsc_mgc_in_wire_d : STD_LOGIC_VECTOR
      (2 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  nbLevels_rsc_mgc_in_wire : mgc_hls.mgc_ioport_comps.mgc_in_wire
    GENERIC MAP(
      rscid => 4,
      width => 3
      )
    PORT MAP(
      d => nbLevels_rsc_mgc_in_wire_d_1,
      z => nbLevels_rsc_mgc_in_wire_z
    );
  nbLevels_rsc_mgc_in_wire_d <= nbLevels_rsc_mgc_in_wire_d_1;
  nbLevels_rsc_mgc_in_wire_z <= nbLevels_rsc_z;

  mgc_start_sync_mgc_bsync_vld : mgc_hls.mgc_ioport_comps.mgc_bsync_vld
    GENERIC MAP(
      rscid => 5,
      ready => 0,
      valid => 1
      )
    PORT MAP(
      vd => mgc_start_sync_mgc_bsync_vld_vd,
      vz => start
    );
  mgc_done_sync_mgc_bsync_rdy : mgc_hls.mgc_ioport_comps.mgc_bsync_rdy
    GENERIC MAP(
      rscid => 6,
      ready => 1,
      valid => 0
      )
    PORT MAP(
      rd => mgc_done_sync_mgc_bsync_rdy_rd_core_sct,
      rz => done
    );
  Vga_triosy_mgc_io_sync : mgc_hls.mgc_ioport_comps.mgc_io_sync
    PORT MAP(
      ld => Vga_triosy_mgc_io_sync_ld_core_sct,
      lz => Vga_triosy_lz
    );
  Dst_triosy_mgc_io_sync : mgc_hls.mgc_ioport_comps.mgc_io_sync
    PORT MAP(
      ld => Dst_triosy_mgc_io_sync_ld_core_sct,
      lz => Dst_triosy_lz
    );
  Src_triosy_mgc_io_sync : mgc_hls.mgc_ioport_comps.mgc_io_sync
    PORT MAP(
      ld => Src_triosy_mgc_io_sync_ld_core_sct,
      lz => Src_triosy_lz
    );
  nbLevels_triosy_mgc_io_sync : mgc_hls.mgc_ioport_comps.mgc_io_sync
    PORT MAP(
      ld => nbLevels_triosy_mgc_io_sync_ld_core_sct,
      lz => nbLevels_triosy_lz
    );
  Main_Trans_Ond_Opt_core_inst : Main_Trans_Ond_Opt_core
    PORT MAP(
      clk => clk,
      rst => rst,
      Src_rsc_singleport_data_out => Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_out,
      Dst_rsc_singleport_data_out => Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_out,
      Src_rsc_singleport_data_in_core => Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_in_core,
      Src_rsc_singleport_addr_core => Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_addr_core,
      Src_rsc_singleport_re_core_sct => Src_rsc_singleport_re_core_sct,
      Src_rsc_singleport_we_core_sct => Src_rsc_singleport_we_core_sct,
      Dst_rsc_singleport_data_in_core => Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_in_core,
      Dst_rsc_singleport_addr_core => Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_addr_core,
      Dst_rsc_singleport_re_core_sct => Dst_rsc_singleport_re_core_sct,
      Dst_rsc_singleport_we_core_sct => Dst_rsc_singleport_we_core_sct,
      Vga_rsc_singleport_data_in_core => Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_data_in_core,
      Vga_rsc_singleport_addr_core => Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_addr_core,
      Vga_rsc_singleport_we_core_sct => Vga_rsc_singleport_we_core_sct,
      nbLevels_rsc_mgc_in_wire_d => Main_Trans_Ond_Opt_core_inst_nbLevels_rsc_mgc_in_wire_d,
      mgc_start_sync_mgc_bsync_vld_vd => mgc_start_sync_mgc_bsync_vld_vd,
      mgc_done_sync_mgc_bsync_rdy_rd_core_sct => mgc_done_sync_mgc_bsync_rdy_rd_core_sct,
      Vga_triosy_mgc_io_sync_ld_core_sct => Vga_triosy_mgc_io_sync_ld_core_sct,
      Dst_triosy_mgc_io_sync_ld_core_sct => Dst_triosy_mgc_io_sync_ld_core_sct,
      Src_triosy_mgc_io_sync_ld_core_sct => Src_triosy_mgc_io_sync_ld_core_sct,
      nbLevels_triosy_mgc_io_sync_ld_core_sct => nbLevels_triosy_mgc_io_sync_ld_core_sct
    );
  Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_out <= Src_rsc_singleport_data_out;
  Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_out <= Dst_rsc_singleport_data_out;
  Src_rsc_singleport_data_in_core <= Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_data_in_core;
  Src_rsc_singleport_addr_core <= Main_Trans_Ond_Opt_core_inst_Src_rsc_singleport_addr_core;
  Dst_rsc_singleport_data_in_core <= Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_data_in_core;
  Dst_rsc_singleport_addr_core <= Main_Trans_Ond_Opt_core_inst_Dst_rsc_singleport_addr_core;
  Vga_rsc_singleport_data_in_core <= Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_data_in_core;
  Vga_rsc_singleport_addr_core <= Main_Trans_Ond_Opt_core_inst_Vga_rsc_singleport_addr_core;
  Main_Trans_Ond_Opt_core_inst_nbLevels_rsc_mgc_in_wire_d <= nbLevels_rsc_mgc_in_wire_d;

  Src_rsc_singleport_data_in <= Src_rsc_singleport_data_in_core;
  Src_rsc_singleport_addr <= Src_rsc_singleport_addr_core;
  Src_rsc_singleport_re <= NOT Src_rsc_singleport_re_core_sct;
  Src_rsc_singleport_we <= NOT Src_rsc_singleport_we_core_sct;
  Dst_rsc_singleport_data_in <= Dst_rsc_singleport_data_in_core;
  Dst_rsc_singleport_addr <= Dst_rsc_singleport_addr_core;
  Dst_rsc_singleport_re <= NOT Dst_rsc_singleport_re_core_sct;
  Dst_rsc_singleport_we <= NOT Dst_rsc_singleport_we_core_sct;
  Vga_rsc_singleport_data_in <= Vga_rsc_singleport_data_in_core;
  Vga_rsc_singleport_addr <= Vga_rsc_singleport_addr_core;
  Vga_rsc_singleport_re <= '1';
  Vga_rsc_singleport_we <= NOT Vga_rsc_singleport_we_core_sct;
END v2;



