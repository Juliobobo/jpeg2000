// ----------------------------------------------------------------------------
// SystemC Wrapper for Catapult Design HDL Netlist
//
//    HLS version: 2011a.200 Production Release
//       HLS date: Mon Jun  2 22:10:04 PDT 2014
//  Flow Packages: HDL_Tcl 2008a.1, SCVerify 2009a.1
//
//   Generated by: xph3sle512@cimeld16
// Generated date: Tue Dec 13 10:28:18 CET 2016
//
// ----------------------------------------------------------------------------
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#if defined(CCS_DUT_SYSC)

// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace ccs_design {
#if defined(CCS_DUT_CYCLE)
//#include "cycle.cxx"
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
//#include "rtl.cxx"
#include "rtl.cxx"
#endif
#endif
}
typedef ccs_design::HDL::Main_Trans_Ond_Opt ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
class ccs_DUT_wrapper : public mc_foreign_module
{
public:
   #ifndef VCS_SYSTEMC
   // Interface Ports
   sc_in< sc_logic > start;
   sc_out< sc_logic > done;
   sc_in<bool> clk;
   sc_in< sc_logic > rst;
   sc_out< sc_lv<8> > Src_rsc_singleport_data_in;
   sc_out< sc_lv<17> > Src_rsc_singleport_addr;
   sc_out< sc_lv<1> > Src_rsc_singleport_re;
   sc_out< sc_lv<1> > Src_rsc_singleport_we;
   sc_in< sc_lv<8> > Src_rsc_singleport_data_out;
   sc_out< sc_lv<8> > Dst_rsc_singleport_data_in;
   sc_out< sc_lv<17> > Dst_rsc_singleport_addr;
   sc_out< sc_lv<1> > Dst_rsc_singleport_re;
   sc_out< sc_lv<1> > Dst_rsc_singleport_we;
   sc_in< sc_lv<8> > Dst_rsc_singleport_data_out;
   sc_out< sc_lv<8> > Vga_rsc_singleport_data_in;
   sc_out< sc_lv<17> > Vga_rsc_singleport_addr;
   sc_out< sc_lv<1> > Vga_rsc_singleport_re;
   sc_out< sc_lv<1> > Vga_rsc_singleport_we;
   sc_in< sc_lv<8> > Vga_rsc_singleport_data_out;
   sc_in< sc_lv<3> > nbLevels_rsc_z;
   sc_out< sc_logic > Src_triosy_lz;
   sc_out< sc_logic > Dst_triosy_lz;
   sc_out< sc_logic > Vga_triosy_lz;
   sc_out< sc_logic > nbLevels_triosy_lz;
   #endif
   
public:
   ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
      : mc_foreign_module(nm,hdl_name)
      #ifndef VCS_SYSTEMC
      ,start("start")
      ,done("done")
      ,clk("clk")
      ,rst("rst")
      ,Src_rsc_singleport_data_in("Src_rsc_singleport_data_in")
      ,Src_rsc_singleport_addr("Src_rsc_singleport_addr")
      ,Src_rsc_singleport_re("Src_rsc_singleport_re")
      ,Src_rsc_singleport_we("Src_rsc_singleport_we")
      ,Src_rsc_singleport_data_out("Src_rsc_singleport_data_out")
      ,Dst_rsc_singleport_data_in("Dst_rsc_singleport_data_in")
      ,Dst_rsc_singleport_addr("Dst_rsc_singleport_addr")
      ,Dst_rsc_singleport_re("Dst_rsc_singleport_re")
      ,Dst_rsc_singleport_we("Dst_rsc_singleport_we")
      ,Dst_rsc_singleport_data_out("Dst_rsc_singleport_data_out")
      ,Vga_rsc_singleport_data_in("Vga_rsc_singleport_data_in")
      ,Vga_rsc_singleport_addr("Vga_rsc_singleport_addr")
      ,Vga_rsc_singleport_re("Vga_rsc_singleport_re")
      ,Vga_rsc_singleport_we("Vga_rsc_singleport_we")
      ,Vga_rsc_singleport_data_out("Vga_rsc_singleport_data_out")
      ,nbLevels_rsc_z("nbLevels_rsc_z")
      ,Src_triosy_lz("Src_triosy_lz")
      ,Dst_triosy_lz("Dst_triosy_lz")
      ,Vga_triosy_lz("Vga_triosy_lz")
      ,nbLevels_triosy_lz("nbLevels_triosy_lz")
      #endif
      {
          // elaborate_foreign_module(hdl_name);
      }
      
      ~ccs_DUT_wrapper() {}
   };
   
   #endif

#endif

